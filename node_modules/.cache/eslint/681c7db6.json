[{"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\worker.js":"1","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\instance.js":"2","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\index.js":"3","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\unreadMessage.js":"4","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\users.js":"5","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\superGroup.js":"6","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\friendRequest.js":"7","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\conversation.js":"8","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\init.js":"9","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\groupRequest.js":"10","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\black.js":"11","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\groups.js":"12","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\message.js":"13","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\superGroupMessage.js":"14","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\groupMember.js":"15","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\friend.js":"16","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\tempCacheChatLogs.js":"17","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\constant\\index.js":"18","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\index.js":"19","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\response.js":"20","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\is.js":"21","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\timer.js":"22","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\escape.js":"23","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\key.js":"24","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\value.js":"25","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\index.js":"26","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localConversationUnreadMessages.js":"27","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localErrChatLogs.js":"28","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localConversations.js":"29","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localChatLogs.js":"30","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localSuperGroups.js":"31","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localBlack.js":"32","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localSgChatLogs.js":"33","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localFriend.js":"34","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localGroups.js":"35","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localGroupRequests.js":"36","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localFriendRequest.js":"37","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localGroupMembers.js":"38","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\tempCacheLocalChatLogs.js":"39","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localAdminGroupRequests.js":"40","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localUsers.js":"41","C:\\ysx\\xm\\mark\\web\\src\\main.js":"42","C:\\ysx\\xm\\mark\\web\\src\\App.vue":"43","C:\\ysx\\xm\\mark\\web\\src\\components\\HelloWorld.vue":"44","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\index.js":"45","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sdk\\index.js":"46","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sdk\\initialize.js":"47","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\emitter.js":"48","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\index.js":"49"},{"size":15970,"mtime":499162500000,"results":"50","hashOfConfig":"51"},{"size":1711,"mtime":1685787281761,"results":"52","hashOfConfig":"51"},{"size":418,"mtime":499162500000,"results":"53","hashOfConfig":"51"},{"size":1338,"mtime":499162500000,"results":"54","hashOfConfig":"51"},{"size":1795,"mtime":499162500000,"results":"55","hashOfConfig":"51"},{"size":3354,"mtime":499162500000,"results":"56","hashOfConfig":"51"},{"size":3210,"mtime":499162500000,"results":"57","hashOfConfig":"51"},{"size":13628,"mtime":499162500000,"results":"58","hashOfConfig":"51"},{"size":2879,"mtime":499162500000,"results":"59","hashOfConfig":"51"},{"size":5126,"mtime":499162500000,"results":"60","hashOfConfig":"51"},{"size":3502,"mtime":499162500000,"results":"61","hashOfConfig":"51"},{"size":5279,"mtime":499162500000,"results":"62","hashOfConfig":"51"},{"size":17743,"mtime":499162500000,"results":"63","hashOfConfig":"51"},{"size":13784,"mtime":499162500000,"results":"64","hashOfConfig":"51"},{"size":11052,"mtime":499162500000,"results":"65","hashOfConfig":"51"},{"size":4209,"mtime":499162500000,"results":"66","hashOfConfig":"51"},{"size":889,"mtime":499162500000,"results":"67","hashOfConfig":"51"},{"size":11158,"mtime":499162500000,"results":"68","hashOfConfig":"51"},{"size":149,"mtime":499162500000,"results":"69","hashOfConfig":"51"},{"size":317,"mtime":499162500000,"results":"70","hashOfConfig":"51"},{"size":474,"mtime":499162500000,"results":"71","hashOfConfig":"51"},{"size":208,"mtime":499162500000,"results":"72","hashOfConfig":"51"},{"size":2155,"mtime":499162500000,"results":"73","hashOfConfig":"51"},{"size":3417,"mtime":499162500000,"results":"74","hashOfConfig":"51"},{"size":1679,"mtime":499162500000,"results":"75","hashOfConfig":"51"},{"size":549,"mtime":499162500000,"results":"76","hashOfConfig":"51"},{"size":942,"mtime":499162500000,"results":"77","hashOfConfig":"51"},{"size":1412,"mtime":499162500000,"results":"78","hashOfConfig":"51"},{"size":6891,"mtime":499162500000,"results":"79","hashOfConfig":"51"},{"size":10048,"mtime":499162500000,"results":"80","hashOfConfig":"51"},{"size":1762,"mtime":499162500000,"results":"81","hashOfConfig":"51"},{"size":2026,"mtime":499162500000,"results":"82","hashOfConfig":"51"},{"size":9396,"mtime":499162500000,"results":"83","hashOfConfig":"51"},{"size":3171,"mtime":499162500000,"results":"84","hashOfConfig":"51"},{"size":3232,"mtime":499162500000,"results":"85","hashOfConfig":"51"},{"size":1963,"mtime":499162500000,"results":"86","hashOfConfig":"51"},{"size":2360,"mtime":499162500000,"results":"87","hashOfConfig":"51"},{"size":8060,"mtime":499162500000,"results":"88","hashOfConfig":"51"},{"size":1030,"mtime":499162500000,"results":"89","hashOfConfig":"51"},{"size":2014,"mtime":499162500000,"results":"90","hashOfConfig":"51"},{"size":1209,"mtime":499162500000,"results":"91","hashOfConfig":"51"},{"size":136,"mtime":1685782167263,"results":"92","hashOfConfig":"51"},{"size":1309,"mtime":1685787069858,"results":"93","hashOfConfig":"51"},{"size":2025,"mtime":1685782167264,"results":"94","hashOfConfig":"51"},{"size":32,"mtime":499162500000,"results":"95","hashOfConfig":"51"},{"size":33877,"mtime":499162500000,"results":"96","hashOfConfig":"51"},{"size":874,"mtime":499162500000,"results":"97","hashOfConfig":"51"},{"size":962,"mtime":499162500000,"results":"98","hashOfConfig":"51"},{"size":16757,"mtime":1685787203784,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1oq4ubg",{"filePath":"103","messages":"104","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"102"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\worker.js",[],[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\instance.js",["203","204"],"/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport initSqlJs from '@jlongster/sql.js';\nimport { SQLiteFS } from 'absurd-sql-optimized';\nimport IndexedDBBackend from 'absurd-sql-optimized/dist/indexeddb-backend';\nself.$RefreshReg$ = () => { };\nself.$RefreshSig$ = () => () => { };\nlet instance;\nlet SQL;\nasync function InitializeDB(filePath) {\n    if (!SQL) {\n        SQL = await initSqlJs({ locateFile: () => '/sql-wasm.wasm' });\n       // SQL = await initSqlJs({ locateFile: () => '../../sql-wasm.wasm' });\n        const sqlFS = new SQLiteFS(SQL.FS, new IndexedDBBackend());\n        SQL.register_for_idb(sqlFS);\n        SQL.FS.mkdir('/sql');\n        SQL.FS.mount(sqlFS, {}, '/sql');\n    }\n    const path = `/sql/${filePath}`;\n    const db = new SQL.Database(path, { filename: true });\n    if (typeof SharedArrayBuffer === 'undefined') {\n        // @ts-ignore\n        const stream = SQL.FS.open(path, 'a+');\n        await stream.node.contents.readIfFallback();\n        // @ts-ignore\n        SQL.FS.close(stream);\n    }\n    db.exec(`\n    PRAGMA page_size=8192;\n    PRAGMA journal_mode=MEMORY;\n  `);\n    return db;\n}\nexport function getInstance(filePath) {\n    if (instance) {\n        return instance;\n    }\n    if (!filePath) {\n        throw new Error('must speciefic database file');\n    }\n    instance = new Promise((resolve, reject) => {\n        const db = InitializeDB(filePath);\n        db.then(res => resolve(res)).catch(err => reject(err));\n    });\n    return instance;\n}\nexport async function resetInstance() {\n    if (!instance) {\n        return;\n    }\n    const db = await instance;\n    db.close();\n    instance = undefined;\n}\n","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\index.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\unreadMessage.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\users.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\superGroup.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\friendRequest.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\conversation.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\init.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\groupRequest.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\black.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\groups.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\message.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\superGroupMessage.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\groupMember.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\friend.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\database\\tempCacheChatLogs.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\constant\\index.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\index.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\response.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\is.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\timer.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\escape.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\key.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\value.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\index.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localConversationUnreadMessages.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localErrChatLogs.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localConversations.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localChatLogs.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localSuperGroups.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localBlack.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localSgChatLogs.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localFriend.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localGroups.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localGroupRequests.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localFriendRequest.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localGroupMembers.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\tempCacheLocalChatLogs.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localAdminGroupRequests.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sqls\\localUsers.js",[],"C:\\ysx\\xm\\mark\\web\\src\\main.js",[],"C:\\ysx\\xm\\mark\\web\\src\\App.vue",[],[],"C:\\ysx\\xm\\mark\\web\\src\\components\\HelloWorld.vue",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\index.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sdk\\index.js",["205"],"import { initDatabaseAPI, workerPromise } from '../api';\nimport Emitter from '../utils/emitter';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getGO, initializeWasm, getGoExitPromsie } from './initialize';\nclass SDK extends Emitter {\n    wasmInitializedPromise;\n    goExitPromise;\n    goExisted = false;\n    constructor(url = '/openIM.wasm') {\n        super();\n        initDatabaseAPI();\n        this.wasmInitializedPromise = initializeWasm(url);\n        this.goExitPromise = getGoExitPromsie();\n        if (this.goExitPromise) {\n            this.goExitPromise\n                .then(() => {\n                console.info('SDK => wasm exist');\n            })\n                .catch(err => {\n                console.info('SDK => wasm with error ', err);\n            })\n                .finally(() => {\n                this.goExisted = true;\n            });\n        }\n    }\n    _invoker(functionName, func, args, processor) {\n        return new Promise(async (resolve, reject) => {\n            console.info(`SDK => [OperationID:${args[0]}] (invoked by js) run ${functionName} with args ${JSON.stringify(args)}`);\n            let response = {\n                operationID: args[0],\n                event: (functionName.slice(0, 1).toUpperCase() +\n                    functionName.slice(1).toLowerCase()),\n            };\n            try {\n                if (!getGO() || getGO().exited || this.goExisted) {\n                    throw 'wasm exist already, fail to run';\n                }\n                let data = await func(...args);\n                if (processor) {\n                    // console.info(\n                    //   `SDK => [OperationID:${\n                    //     args[0]\n                    //   }] (invoked by js) run ${functionName} with response before processor ${JSON.stringify(\n                    //     data\n                    //   )}`\n                    // );\n                    data = processor(data);\n                }\n                response.data = data;\n                resolve(response);\n            }\n            catch (error) {\n                // console.info(\n                //   `SDK => [OperationID:${\n                //     args[0]\n                //   }] (invoked by js) run ${functionName} with error ${JSON.stringify(\n                //     error\n                //   )}`\n                // );\n                response = {\n                    ...response,\n                    ...error,\n                };\n                reject(response);\n            }\n            // console.info(\n            //   `SDK => [OperationID:${\n            //     args[0]\n            //   }] (invoked by js) run ${functionName} with response ${JSON.stringify(\n            //     response\n            //   )}`\n            // );\n            // return response as WsResponse;\n        });\n    }\n    login = async (params, operationID = uuidv4()) => {\n        console.info(`SDK => (invoked by js) run login with args ${JSON.stringify({\n            params,\n            operationID,\n        })}`);\n        await workerPromise;\n        await this.wasmInitializedPromise;\n        window.commonEventFunc(event => {\n            try {\n                console.info('SDK => received event ', event);\n                const parsed = JSON.parse(event);\n                this.emit(parsed.event, parsed);\n            }\n            catch (error) {\n                console.error(error);\n            }\n        });\n        const config = {\n            platform: params.platformID,\n            api_addr: params.apiAddress,\n            ws_addr: params.wsAddress,\n            log_level: params.logLevel || 6,\n            is_need_encryption: params.isNeedEncryption || false,\n        };\n        window.initSDK(operationID, JSON.stringify(config));\n        return await window.login(operationID, params.userID, params.token);\n    };\n    logout = (operationID = uuidv4()) => {\n        return this._invoker('logout', window.logout, [operationID]);\n    };\n    getAllConversationList = (operationID = uuidv4()) => {\n        return this._invoker('getAllConversationList', window.getAllConversationList, [operationID]);\n    };\n    getOneConversation = (params, operationID = uuidv4()) => {\n        return this._invoker('getOneConversation', window.getOneConversation, [\n            operationID,\n            params.sessionType,\n            params.sourceID,\n        ]);\n    };\n    getAdvancedHistoryMessageList = (params, operationID = uuidv4()) => {\n        return this._invoker('getAdvancedHistoryMessageList', window.getAdvancedHistoryMessageList, [operationID, JSON.stringify(params)]);\n    };\n    getHistoryMessageList = (params, operationID = uuidv4()) => {\n        return this._invoker('getHistoryMessageList', window.getHistoryMessageList, [operationID, JSON.stringify(params)]);\n    };\n    getGroupsInfo = (params, operationID = uuidv4()) => {\n        return this._invoker('getGroupsInfo', window.getGroupsInfo, [\n            operationID,\n            JSON.stringify(params),\n        ]);\n    };\n    deleteConversationFromLocalAndSvr = (conversationID, operationID = uuidv4()) => {\n        return this._invoker('deleteConversationFromLocalAndSvr', window.deleteConversationFromLocalAndSvr, [operationID, conversationID]);\n    };\n    markC2CMessageAsRead = (params, operationID = uuidv4()) => {\n        return this._invoker('markC2CMessageAsRead', window.markC2CMessageAsRead, [\n            operationID,\n            params.userID,\n            JSON.stringify(params.msgIDList),\n        ]);\n    };\n    markMessageAsReadByConID = (params, operationID = uuidv4()) => {\n        return this._invoker('markMessageAsReadByConID', window.markMessageAsReadByConID, [operationID, params.conversationID, JSON.stringify(params.msgIDList)]);\n    };\n    markNotifyMessageHasRead = (conversationID, operationID = uuidv4()) => {\n        return this._invoker('markNotifyMessageHasRead', window.markNotifyMessageHasRead, [operationID, conversationID, '[]']);\n    };\n    getGroupMemberList = (params, operationID = uuidv4()) => {\n        return this._invoker('getGroupMemberList', window.getGroupMemberList, [\n            operationID,\n            params.groupID,\n            params.filter,\n            params.offset,\n            params.count,\n        ]);\n    };\n    createTextMessage = (text, operationID = uuidv4()) => {\n        return this._invoker('createTextMessage', window.createTextMessage, [operationID, text], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createImageMessage = (params, operationID = uuidv4()) => {\n        return this._invoker('createImageMessage', window.createImageMessageByURL, [\n            operationID,\n            JSON.stringify(params.sourcePicture),\n            JSON.stringify(params.bigPicture),\n            JSON.stringify(params.snapshotPicture),\n        ], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createCustomMessage = (params, operationID = uuidv4()) => {\n        return this._invoker('createCustomMessage', window.createCustomMessage, [operationID, params.data, params.extension, params.description], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createQuoteMessage = (params, operationID = uuidv4()) => {\n        return this._invoker('createQuoteMessage', window.createQuoteMessage, [operationID, params.text, params.message], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createAdvancedQuoteMessage(params, operationID = uuidv4()) {\n        return this._invoker('createAdvancedQuoteMessage', window.createAdvancedQuoteMessage, [\n            operationID,\n            params.text,\n            params.message,\n            JSON.stringify(params.messageEntityList),\n        ], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    }\n    createAdvancedTextMessage = (params, operationID = uuidv4()) => {\n        return this._invoker('createAdvancedTextMessage', window.createAdvancedTextMessage, [operationID, params.text, JSON.stringify(params.messageEntityList)], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    sendMessage = (params, operationID = uuidv4()) => {\n        const offlinePushInfo = params.offlinePushInfo ?? {\n            title: '你有一条新消息',\n            desc: '',\n            ex: '',\n            iOSPushSound: '+1',\n            iOSBadgeCount: true,\n        };\n        return this._invoker('sendMessage', window.sendMessage, [\n            operationID,\n            params.message,\n            params.recvID,\n            params.groupID,\n            JSON.stringify(offlinePushInfo),\n        ]);\n    };\n    sendMessageNotOss = (params, operationID = uuidv4()) => {\n        const offlinePushInfo = params.offlinePushInfo ?? {\n            title: '你有一条新消息',\n            desc: '',\n            ex: '',\n            iOSPushSound: '+1',\n            iOSBadgeCount: true,\n        };\n        return this._invoker('sendMessageNotOss', window.sendMessageNotOss, [\n            operationID,\n            params.message,\n            params.recvID,\n            params.groupID,\n            JSON.stringify(offlinePushInfo),\n        ]);\n    };\n    sendMessageByBuffer = (params, operationID = uuidv4()) => {\n        const offlinePushInfo = params.offlinePushInfo ?? {\n            title: '你有一条新消息',\n            desc: '',\n            ex: '',\n            iOSPushSound: '+1',\n            iOSBadgeCount: true,\n        };\n        return this._invoker('sendMessageByBuffer', window.sendMessageByBuffer, [\n            operationID,\n            params.message,\n            params.recvID,\n            params.groupID,\n            JSON.stringify(offlinePushInfo),\n            params.fileArrayBuffer,\n            params.snpFileArrayBuffer,\n        ]);\n    };\n    exportDB(operationID = uuidv4()) {\n        return this._invoker('exportDB', window.exportDB, [operationID]);\n    }\n    getHistoryMessageListReverse = (params, operationID = uuidv4()) => {\n        return this._invoker('getHistoryMessageListReverse', window.getHistoryMessageListReverse, [operationID, JSON.stringify(params)]);\n    };\n    revokeMessage = (params, operationID = uuidv4()) => {\n        return this._invoker('revokeMessage', window.revokeMessage, [\n            operationID,\n            params,\n        ]);\n    };\n    setOneConversationPrivateChat = (params, operationID = uuidv4()) => {\n        return this._invoker('setOneConversationPrivateChat', window.setOneConversationPrivateChat, [operationID, params.conversationID, params.isPrivate]);\n    };\n    setOneConversationBurnDuration = (params, operationID = uuidv4()) => {\n        return this._invoker('setOneConversationBurnDuration', window.setOneConversationBurnDuration, [operationID, params.conversationID, params.burnDuration]);\n    };\n    getLoginStatus = (operationID = uuidv4()) => {\n        return this._invoker('getLoginStatus', window.getLoginStatus, [operationID], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    getLoginUser = (operationID = uuidv4()) => {\n        return this._invoker('getLoginUser', window.getLoginUser, [operationID]);\n    };\n    getSelfUserInfo = (operationID = uuidv4()) => {\n        return this._invoker('getSelfUserInfo', window.getSelfUserInfo, [\n            operationID,\n        ]);\n    };\n    getUsersInfo = (data, operationID = uuidv4()) => {\n        return this._invoker('getUsersInfo', window.getUsersInfo, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    setSelfInfo = (data, operationID = uuidv4()) => {\n        return this._invoker('setSelfInfo', window.setSelfInfo, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    createTextAtMessage = (data, operationID = uuidv4()) => {\n        return this._invoker('createTextAtMessage', window.createTextAtMessage, [\n            operationID,\n            data.text,\n            JSON.stringify(data.atUserIDList),\n            JSON.stringify(data.atUsersInfo),\n            data.message,\n        ], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createSoundMessage = (data, operationID = uuidv4()) => {\n        return this._invoker('createSoundMessage', window.createSoundMessageByURL, [operationID, JSON.stringify(data)], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createVideoMessage = (data, operationID = uuidv4()) => {\n        return this._invoker('createVideoMessage', window.createVideoMessageByURL, [operationID, JSON.stringify(data)], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createFileMessage = (data, operationID = uuidv4()) => {\n        return this._invoker('createFileMessage', window.createFileMessageByURL, [operationID, JSON.stringify(data)], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createFileMessageFromFullPath = (data, operationID = uuidv4()) => {\n        return this._invoker('createFileMessageFromFullPath', window.createFileMessageFromFullPath, [operationID, data.fileFullPath, data.fileName], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createImageMessageFromFullPath = (data, operationID = uuidv4()) => {\n        return this._invoker('createImageMessageFromFullPath ', window.createImageMessageFromFullPath, [operationID, data], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createSoundMessageFromFullPath = (data, operationID = uuidv4()) => {\n        return this._invoker('createSoundMessageFromFullPath ', window.createSoundMessageFromFullPath, [operationID, data.soundPath, data.duration], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createVideoMessageFromFullPath = (data, operationID = uuidv4()) => {\n        return this._invoker('createVideoMessageFromFullPath ', window.createVideoMessageFromFullPath, [\n            operationID,\n            data.videoFullPath,\n            data.videoType,\n            data.duration,\n            data.snapshotFullPath,\n        ], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createMergerMessage = (data, operationID = uuidv4()) => {\n        return this._invoker('createMergerMessage ', window.createMergerMessage, [\n            operationID,\n            JSON.stringify(data.messageList),\n            data.title,\n            JSON.stringify(data.summaryList),\n        ], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createForwardMessage = (data, operationID = uuidv4()) => {\n        return this._invoker('createForwardMessage ', window.createForwardMessage, [operationID, data], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createFaceMessage = (data, operationID = uuidv4()) => {\n        return this._invoker('createFaceMessage ', window.createFaceMessage, [operationID, data.index, data.data], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createLocationMessage = (data, operationID = uuidv4()) => {\n        return this._invoker('createLocationMessage ', window.createLocationMessage, [operationID, data.description, data.longitude, data.latitude], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    createCardMessage = (data, operationID = uuidv4()) => {\n        return this._invoker('createCardMessage ', window.createCardMessage, [operationID, data], data => {\n            // compitable with old version sdk\n            return data[0];\n        });\n    };\n    deleteMessageFromLocalStorage = (data, operationID = uuidv4()) => {\n        return this._invoker('deleteMessageFromLocalStorage ', window.deleteMessageFromLocalStorage, [operationID, data]);\n    };\n    deleteMessageFromLocalAndSvr = (data, operationID = uuidv4()) => {\n        return this._invoker('deleteMessageFromLocalAndSvr ', window.deleteMessageFromLocalAndSvr, [operationID, data]);\n    };\n    deleteAllConversationFromLocal = (operationID = uuidv4()) => {\n        return this._invoker('deleteAllConversationFromLocal ', window.deleteAllConversationFromLocal, [operationID]);\n    };\n    deleteAllMsgFromLocal = (operationID = uuidv4()) => {\n        return this._invoker('deleteAllMsgFromLocal ', window.deleteAllMsgFromLocal, [operationID]);\n    };\n    deleteAllMsgFromLocalAndSvr = (operationID = uuidv4()) => {\n        return this._invoker('deleteAllMsgFromLocalAndSvr ', window.deleteAllMsgFromLocalAndSvr, [operationID]);\n    };\n    markGroupMessageHasRead = (data, operationID = uuidv4()) => {\n        return this._invoker('markGroupMessageHasRead ', window.markGroupMessageHasRead, [operationID, data]);\n    };\n    markGroupMessageAsRead = (data, operationID = uuidv4()) => {\n        return this._invoker('markGroupMessageAsRead ', window.markGroupMessageAsRead, [operationID, data.groupID, JSON.stringify(data.msgIDList)]);\n    };\n    insertSingleMessageToLocalStorage = (data, operationID = uuidv4()) => {\n        return this._invoker('insertSingleMessageToLocalStorage ', window.insertSingleMessageToLocalStorage, [operationID, data.message, data.recvID, data.sendID]);\n    };\n    insertGroupMessageToLocalStorage = (data, operationID = uuidv4()) => {\n        return this._invoker('insertGroupMessageToLocalStorage ', window.insertGroupMessageToLocalStorage, [operationID, data.message, data.groupID, data.sendID]);\n    };\n    typingStatusUpdate = (data, operationID = uuidv4()) => {\n        return this._invoker('typingStatusUpdate ', window.typingStatusUpdate, [\n            operationID,\n            data.recvID,\n            data.msgTip,\n        ]);\n    };\n    clearC2CHistoryMessage = (data, operationID = uuidv4()) => {\n        return this._invoker('clearC2CHistoryMessage ', window.clearC2CHistoryMessage, [operationID, data]);\n    };\n    clearC2CHistoryMessageFromLocalAndSvr = (data, operationID = uuidv4()) => {\n        return this._invoker('clearC2CHistoryMessageFromLocalAndSvr ', window.clearC2CHistoryMessageFromLocalAndSvr, [operationID, data]);\n    };\n    clearGroupHistoryMessage = (data, operationID = uuidv4()) => {\n        return this._invoker('clearGroupHistoryMessage ', window.clearGroupHistoryMessage, [operationID, data]);\n    };\n    clearGroupHistoryMessageFromLocalAndSvr = (data, operationID = uuidv4()) => {\n        return this._invoker('clearGroupHistoryMessageFromLocalAndSvr ', window.clearGroupHistoryMessageFromLocalAndSvr, [operationID, data]);\n    };\n    getConversationListSplit = (data, operationID = uuidv4()) => {\n        return this._invoker('getConversationListSplit ', window.getConversationListSplit, [operationID, data.offset, data.count]);\n    };\n    getConversationIDBySessionType = (data, operationID = uuidv4()) => {\n        return this._invoker('getConversationIDBySessionType ', window.getConversationIDBySessionType, [operationID, data.sourceID, data.sessionType]);\n    };\n    getMultipleConversation = (data, operationID = uuidv4()) => {\n        return this._invoker('getMultipleConversation ', window.getMultipleConversation, [operationID, JSON.stringify(data)]);\n    };\n    deleteConversation = (data, operationID = uuidv4()) => {\n        return this._invoker('deleteConversation ', window.deleteConversation, [\n            operationID,\n            data,\n        ]);\n    };\n    setConversationDraft = (data, operationID = uuidv4()) => {\n        return this._invoker('setConversationDraft ', window.setConversationDraft, [\n            operationID,\n            data.conversationID,\n            data.draftText,\n        ]);\n    };\n    pinConversation = (data, operationID = uuidv4()) => {\n        return this._invoker('pinConversation ', window.pinConversation, [\n            operationID,\n            data.conversationID,\n            data.isPinned,\n        ]);\n    };\n    getTotalUnreadMsgCount = (operationID = uuidv4()) => {\n        return this._invoker('getTotalUnreadMsgCount ', window.getTotalUnreadMsgCount, [operationID]);\n    };\n    getConversationRecvMessageOpt = (data, operationID = uuidv4()) => {\n        return this._invoker('getConversationRecvMessageOpt ', window.getConversationRecvMessageOpt, [operationID, JSON.stringify(data)]);\n    };\n    setConversationRecvMessageOpt = (data, operationID = uuidv4()) => {\n        return this._invoker('setConversationRecvMessageOpt ', window.setConversationRecvMessageOpt, [operationID, JSON.stringify(data.conversationIDList), data.opt]);\n    };\n    searchLocalMessages = (data, operationID = uuidv4()) => {\n        return this._invoker('searchLocalMessages ', window.searchLocalMessages, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    addFriend = (data, operationID = uuidv4()) => {\n        return this._invoker('addFriend ', window.addFriend, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    searchFriends = (data, operationID = uuidv4()) => {\n        return this._invoker('searchFriends ', window.searchFriends, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    getDesignatedFriendsInfo = (data, operationID = uuidv4()) => {\n        return this._invoker('getDesignatedFriendsInfo ', window.getDesignatedFriendsInfo, [operationID, JSON.stringify(data)]);\n    };\n    getRecvFriendApplicationList = (operationID = uuidv4()) => {\n        return this._invoker('getRecvFriendApplicationList ', window.getRecvFriendApplicationList, [operationID]);\n    };\n    getSendFriendApplicationList = (operationID = uuidv4()) => {\n        return this._invoker('getSendFriendApplicationList ', window.getSendFriendApplicationList, [operationID]);\n    };\n    getFriendList = (operationID = uuidv4()) => {\n        return this._invoker('getFriendList ', window.getFriendList, [operationID]);\n    };\n    setFriendRemark = (data, operationID = uuidv4()) => {\n        return this._invoker('setFriendRemark ', window.setFriendRemark, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    checkFriend = (data, operationID = uuidv4()) => {\n        return this._invoker('checkFriend', window.checkFriend, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    acceptFriendApplication = (data, operationID = uuidv4()) => {\n        return this._invoker('acceptFriendApplication', window.acceptFriendApplication, [operationID, JSON.stringify(data)]);\n    };\n    refuseFriendApplication = (data, operationID = uuidv4()) => {\n        return this._invoker('refuseFriendApplication ', window.refuseFriendApplication, [operationID, JSON.stringify(data)]);\n    };\n    deleteFriend = (data, operationID = uuidv4()) => {\n        return this._invoker('deleteFriend ', window.deleteFriend, [\n            operationID,\n            data,\n        ]);\n    };\n    addBlack = (data, operationID = uuidv4()) => {\n        return this._invoker('addBlack ', window.addBlack, [operationID, data]);\n    };\n    removeBlack = (data, operationID = uuidv4()) => {\n        return this._invoker('removeBlack ', window.removeBlack, [\n            operationID,\n            data,\n        ]);\n    };\n    getBlackList = (operationID = uuidv4()) => {\n        return this._invoker('getBlackList ', window.getBlackList, [operationID]);\n    };\n    inviteUserToGroup = (data, operationID = uuidv4()) => {\n        return this._invoker('inviteUserToGroup ', window.inviteUserToGroup, [\n            operationID,\n            data.groupID,\n            data.reason,\n            JSON.stringify(data.userIDList),\n        ]);\n    };\n    kickGroupMember = (data, operationID = uuidv4()) => {\n        return this._invoker('kickGroupMember ', window.kickGroupMember, [\n            operationID,\n            data.groupID,\n            data.reason,\n            JSON.stringify(data.userIDList),\n        ]);\n    };\n    getGroupMembersInfo = (data, operationID = uuidv4()) => {\n        return this._invoker('getGroupMembersInfo ', window.getGroupMembersInfo, [\n            operationID,\n            data.groupID,\n            JSON.stringify(data.userIDList),\n        ]);\n    };\n    getGroupMemberListByJoinTimeFilter = (data, operationID = uuidv4()) => {\n        return this._invoker('getGroupMemberListByJoinTimeFilter ', window.getGroupMemberListByJoinTimeFilter, [\n            operationID,\n            data.groupID,\n            data.offset,\n            data.count,\n            data.joinTimeBegin,\n            data.joinTimeEnd,\n            JSON.stringify(data.filterUserIDList),\n        ]);\n    };\n    searchGroupMembers = (data, operationID = uuidv4()) => {\n        return this._invoker('searchGroupMembers ', window.searchGroupMembers, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    setGroupApplyMemberFriend = (data, operationID = uuidv4()) => {\n        return this._invoker('setGroupApplyMemberFriend ', window.setGroupApplyMemberFriend, [operationID, data.groupID, data.rule]);\n    };\n    setGroupLookMemberInfo = (data, operationID = uuidv4()) => {\n        return this._invoker('setGroupLookMemberInfo ', window.setGroupLookMemberInfo, [operationID, data.groupID, data.rule]);\n    };\n    getJoinedGroupList = (operationID = uuidv4()) => {\n        return this._invoker('getJoinedGroupList ', window.getJoinedGroupList, [\n            operationID,\n        ]);\n    };\n    createGroup = (data, operationID = uuidv4()) => {\n        return this._invoker('createGroup ', window.createGroup, [\n            operationID,\n            JSON.stringify(data.groupBaseInfo),\n            JSON.stringify(data.memberList),\n        ]);\n    };\n    setGroupInfo = (data, operationID = uuidv4()) => {\n        return this._invoker('setGroupInfo ', window.setGroupInfo, [\n            operationID,\n            data.groupID,\n            JSON.stringify(data.groupInfo),\n        ]);\n    };\n    setGroupMemberNickname = (data, operationID = uuidv4()) => {\n        return this._invoker('setGroupMemberNickname ', window.setGroupMemberNickname, [operationID, data.groupID, data.userID, data.GroupMemberNickname]);\n    };\n    setGroupMemberInfo = (data, operationID = uuidv4()) => {\n        return this._invoker('setGroupMemberInfo ', window.setGroupMemberInfo, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    joinGroup = (data, operationID = uuidv4()) => {\n        return this._invoker('joinGroup ', window.joinGroup, [\n            operationID,\n            data.groupID,\n            data.reqMsg,\n            data.joinSource,\n        ]);\n    };\n    searchGroups = (data, operationID = uuidv4()) => {\n        return this._invoker('searchGroups ', window.searchGroups, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    quitGroup = (data, operationID = uuidv4()) => {\n        return this._invoker('quitGroup ', window.quitGroup, [operationID, data]);\n    };\n    dismissGroup = (data, operationID = uuidv4()) => {\n        return this._invoker('dismissGroup ', window.dismissGroup, [\n            operationID,\n            data,\n        ]);\n    };\n    changeGroupMute = (data, operationID = uuidv4()) => {\n        return this._invoker('changeGroupMute ', window.changeGroupMute, [\n            operationID,\n            data.groupID,\n            data.isMute,\n        ]);\n    };\n    changeGroupMemberMute = (data, operationID = uuidv4()) => {\n        return this._invoker('changeGroupMemberMute ', window.changeGroupMemberMute, [operationID, data.groupID, data.userID, data.mutedSeconds]);\n    };\n    transferGroupOwner = (data, operationID = uuidv4()) => {\n        return this._invoker('transferGroupOwner ', window.transferGroupOwner, [\n            operationID,\n            data.groupID,\n            data.newOwnerUserID,\n        ]);\n    };\n    getSendGroupApplicationList = (operationID = uuidv4()) => {\n        return this._invoker('getSendGroupApplicationList ', window.getSendGroupApplicationList, [operationID]);\n    };\n    getRecvGroupApplicationList = (operationID = uuidv4()) => {\n        return this._invoker('getRecvGroupApplicationList ', window.getRecvGroupApplicationList, [operationID]);\n    };\n    acceptGroupApplication = (data, operationID = uuidv4()) => {\n        return this._invoker('acceptGroupApplication ', window.acceptGroupApplication, [operationID, data.groupID, data.fromUserID, data.handleMsg]);\n    };\n    refuseGroupApplication = (data, operationID = uuidv4()) => {\n        return this._invoker('refuseGroupApplication ', window.refuseGroupApplication, [operationID, data.groupID, data.fromUserID, data.handleMsg]);\n    };\n    signalingInvite = (data, operationID = uuidv4()) => {\n        return this._invoker('signalingInvite ', window.signalingInvite, [\n            operationID,\n            JSON.stringify({ invitation: data }),\n        ]);\n    };\n    signalingInviteInGroup = (data, operationID = uuidv4()) => {\n        return this._invoker('signalingInviteInGroup ', window.signalingInviteInGroup, [operationID, JSON.stringify({ invitation: data })]);\n    };\n    signalingAccept = (data, operationID = uuidv4()) => {\n        return this._invoker('signalingAccept ', window.signalingAccept, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    signalingReject = (data, operationID = uuidv4()) => {\n        return this._invoker('signalingReject ', window.signalingReject, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    signalingCancel = (data, operationID = uuidv4()) => {\n        return this._invoker('signalingCancel ', window.signalingCancel, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    signalingHungUp = (data, operationID = uuidv4()) => {\n        return this._invoker('signalingHungUp ', window.signalingHungUp, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    resetConversationGroupAtType = (data, operationID = uuidv4()) => {\n        return this._invoker('resetConversationGroupAtType ', window.resetConversationGroupAtType, [operationID, data]);\n    };\n    setGroupMemberRoleLevel = (data, operationID = uuidv4()) => {\n        return this._invoker('setGroupMemberRoleLevel ', window.setGroupMemberRoleLevel, [operationID, data.groupID, data.userID, data.roleLevel]);\n    };\n    setGroupVerification = (data, operationID = uuidv4()) => {\n        return this._invoker('setGroupVerification ', window.setGroupVerification, [\n            operationID,\n            data.groupID,\n            data.verification,\n        ]);\n    };\n    setGlobalRecvMessageOpt = (data, operationID = uuidv4()) => {\n        return this._invoker('setGlobalRecvMessageOpt ', window.setGlobalRecvMessageOpt, [operationID, data.opt]);\n    };\n    newRevokeMessage = (data, operationID = uuidv4()) => {\n        return this._invoker('newRevokeMessage ', window.newRevokeMessage, [\n            operationID,\n            data,\n        ]);\n    };\n    findMessageList = (data, operationID = uuidv4()) => {\n        return this._invoker('findMessageList ', window.findMessageList, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    wakeUp = (operationID = uuidv4()) => {\n        return this._invoker('wakeUp', window.wakeUp, [operationID]);\n    };\n    signalingGetRoomByGroupID = (groupID, operationID = uuidv4()) => {\n        return this._invoker('signalingGetRoomByGroupID ', window.signalingGetRoomByGroupID, [operationID, groupID]);\n    };\n    signalingGetTokenByRoomID = (roomID, operationID = uuidv4()) => {\n        return this._invoker('signalingGetTokenByRoomID ', window.signalingGetTokenByRoomID, [operationID, roomID]);\n    };\n    signalingSendCustomSignal = (data, operationID = uuidv4()) => {\n        return this._invoker('signalingSendCustomSignal ', window.signalingSendCustomSignal, [operationID, data.customInfo, data.roomID]);\n    };\n    signalingCreateMeeting = (data, operationID = uuidv4()) => {\n        return this._invoker('signalingCreateMeeting ', window.signalingCreateMeeting, [operationID, JSON.stringify(data)]);\n    };\n    signalingJoinMeeting = (data, operationID = uuidv4()) => {\n        return this._invoker('signalingJoinMeeting ', window.signalingJoinMeeting, [\n            operationID,\n            JSON.stringify(data),\n        ]);\n    };\n    signalingUpdateMeetingInfo = (data, operationID = uuidv4()) => {\n        return this._invoker('signalingUpdateMeetingInfo ', window.signalingUpdateMeetingInfo, [operationID, JSON.stringify(data)]);\n    };\n    signalingCloseRoom = (roomID, operationID = uuidv4()) => {\n        return this._invoker('signalingCloseRoom ', window.signalingCloseRoom, [\n            operationID,\n            roomID,\n        ]);\n    };\n    signalingGetMeetings = (operationID = uuidv4()) => {\n        return this._invoker('signalingGetMeetings ', window.signalingGetMeetings, [\n            operationID,\n        ]);\n    };\n    signalingOperateStream = (data, operationID = uuidv4()) => {\n        return this._invoker('signalingOperateStream ', window.signalingOperateStream, [\n            operationID,\n            data.streamType,\n            data.roomID,\n            data.userID,\n            data.mute,\n            data.muteAll,\n        ]);\n    };\n}\nlet instance;\nexport function getSDK(url = '/openIM.wasm') {\n    if (typeof window === 'undefined') {\n        return {};\n    }\n    if (instance) {\n        return instance;\n    }\n    instance = new SDK(url);\n    return instance;\n}\n","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\sdk\\initialize.js",["206"],"import { wait } from '../utils';\nlet initiallized = false;\nlet go;\nlet goExitPromise;\nexport async function initializeWasm(url) {\n    if (initiallized) {\n        return null;\n    }\n    if (typeof window === 'undefined') {\n        return Promise.resolve(null);\n    }\n    go = new Go();\n    if ('instantiateStreaming' in WebAssembly) {\n        const wasm = await WebAssembly.instantiateStreaming(fetch(url), go.importObject);\n        go.run(wasm.instance);\n    }\n    else {\n        const bytes = await fetch(url).then(resp => resp.arrayBuffer());\n        const wasm = await WebAssembly.instantiate(bytes, go.importObject);\n        goExitPromise = go.run(wasm.instance);\n    }\n    await wait(100);\n    return go;\n}\nexport function reset() {\n    initiallized = false;\n}\nexport function getGO() {\n    return go;\n}\nexport function getGoExitPromsie() {\n    return goExitPromise;\n}\n","C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\utils\\emitter.js",[],"C:\\ysx\\xm\\mark\\web\\src\\utils\\lib\\api\\index.js",[],{"ruleId":"207","message":"208","line":1,"column":1,"endLine":1,"endColumn":64,"severity":2,"nodeType":null},{"ruleId":"209","message":"210","line":2,"column":1,"endLine":2,"endColumn":55,"severity":2,"nodeType":null},{"ruleId":"211","severity":2,"message":"212","line":28,"column":28,"nodeType":"213","messageId":"214","endLine":28,"endColumn":33},{"ruleId":"215","severity":2,"message":"216","line":12,"column":14,"nodeType":"213","messageId":"217","endLine":12,"endColumn":16},"@typescript-eslint/no-unsafe-member-access","Definition for rule '@typescript-eslint/no-unsafe-member-access' was not found.","@typescript-eslint/no-unsafe-call","Definition for rule '@typescript-eslint/no-unsafe-call' was not found.","no-async-promise-executor","Promise executor functions should not be async.","Identifier","async","no-undef","'Go' is not defined.","undef"]