{"ast":null,"code":"import { DatabaseErrorCode } from '../../constant';\nimport { insertGroupRequest as databaseInsertGroupRequest, deleteGroupRequest as databaseDeleteGroupRequest, updateGroupRequest as databaseUpdateGroupRequest, getSendGroupApplication as databaseGetSendGroupApplication, insertAdminGroupRequest as databaseInsertAdminGroupRequest, deleteAdminGroupRequest as databaseDeleteAdminGroupRequest, updateAdminGroupRequest as databaseUpdateAdminGroupRequest, getAdminGroupApplication as databaseGetAdminGroupApplication } from '../../sqls';\nimport { convertToSnakeCaseObject, convertObjectField, formatResponse, converSqlExecResult } from '../../utils';\nimport { getInstance } from './instance';\nexport async function insertGroupRequest(localGroupRequestStr) {\n  try {\n    const db = await getInstance();\n    const localGroupRequest = convertToSnakeCaseObject(convertObjectField(JSON.parse(localGroupRequestStr), {\n      groupFaceURL: 'face_url',\n      userFaceURL: 'user_face_url',\n      handledMsg: 'handle_msg',\n      handledTime: 'handle_time'\n    }));\n    databaseInsertGroupRequest(db, localGroupRequest);\n    return formatResponse('');\n  } catch (e) {\n    console.error(e);\n    return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n  }\n}\nexport async function deleteGroupRequest(groupID, userID) {\n  try {\n    const db = await getInstance();\n    databaseDeleteGroupRequest(db, groupID, userID);\n    return formatResponse('');\n  } catch (e) {\n    console.error(e);\n    return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n  }\n}\nexport async function updateGroupRequest(localGroupRequestStr) {\n  try {\n    const db = await getInstance();\n    const localGroupRequest = convertToSnakeCaseObject(convertObjectField(JSON.parse(localGroupRequestStr), {\n      groupFaceURL: 'face_url',\n      userFaceURL: 'user_face_url',\n      handledMsg: 'handle_msg',\n      handledTime: 'handle_time'\n    }));\n    databaseUpdateGroupRequest(db, localGroupRequest);\n    return formatResponse('');\n  } catch (e) {\n    console.error(e);\n    return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n  }\n}\nexport async function getSendGroupApplication() {\n  try {\n    const db = await getInstance();\n    const execResult = databaseGetSendGroupApplication(db);\n    return formatResponse(converSqlExecResult(execResult[0], 'CamelCase', [], {\n      face_url: 'groupFaceURL',\n      user_face_url: 'userFaceURL',\n      handle_msg: 'handledMsg',\n      handle_time: 'handledTime'\n    }));\n  } catch (e) {\n    console.error(e);\n    return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n  }\n}\nexport async function insertAdminGroupRequest(localAdminGroupRequestStr) {\n  try {\n    const db = await getInstance();\n    const localAminGroupRequest = convertToSnakeCaseObject(convertObjectField(JSON.parse(localAdminGroupRequestStr), {\n      groupFaceURL: 'face_url',\n      userFaceURL: 'user_face_url',\n      handledMsg: 'handle_msg',\n      handledTime: 'handle_time'\n    }));\n    databaseInsertAdminGroupRequest(db, localAminGroupRequest);\n    return formatResponse('');\n  } catch (e) {\n    console.error(e);\n    return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n  }\n}\nexport async function deleteAdminGroupRequest(groupID, userID) {\n  try {\n    const db = await getInstance();\n    databaseDeleteAdminGroupRequest(db, groupID, userID);\n    return formatResponse('');\n  } catch (e) {\n    console.error(e);\n    return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n  }\n}\nexport async function updateAdminGroupRequest(localGroupRequestStr) {\n  try {\n    const db = await getInstance();\n    const localGroupRequest = convertToSnakeCaseObject(convertObjectField(JSON.parse(localGroupRequestStr), {\n      groupFaceURL: 'face_url',\n      userFaceURL: 'user_face_url',\n      handledMsg: 'handle_msg',\n      handledTime: 'handle_time'\n    }));\n    databaseUpdateAdminGroupRequest(db, localGroupRequest);\n    return formatResponse('');\n  } catch (e) {\n    console.error(e);\n    return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n  }\n}\nexport async function getAdminGroupApplication() {\n  try {\n    const db = await getInstance();\n    const execResult = databaseGetAdminGroupApplication(db);\n    return formatResponse(converSqlExecResult(execResult[0], 'CamelCase', [], {\n      face_url: 'groupFaceURL',\n      user_face_url: 'userFaceURL',\n      handle_msg: 'handledMsg',\n      handle_time: 'handledTime'\n    }));\n  } catch (e) {\n    console.error(e);\n    return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n  }\n}","map":{"version":3,"names":["DatabaseErrorCode","insertGroupRequest","databaseInsertGroupRequest","deleteGroupRequest","databaseDeleteGroupRequest","updateGroupRequest","databaseUpdateGroupRequest","getSendGroupApplication","databaseGetSendGroupApplication","insertAdminGroupRequest","databaseInsertAdminGroupRequest","deleteAdminGroupRequest","databaseDeleteAdminGroupRequest","updateAdminGroupRequest","databaseUpdateAdminGroupRequest","getAdminGroupApplication","databaseGetAdminGroupApplication","convertToSnakeCaseObject","convertObjectField","formatResponse","converSqlExecResult","getInstance","localGroupRequestStr","db","localGroupRequest","JSON","parse","groupFaceURL","userFaceURL","handledMsg","handledTime","e","console","error","undefined","ErrorInit","stringify","groupID","userID","execResult","face_url","user_face_url","handle_msg","handle_time","localAdminGroupRequestStr","localAminGroupRequest"],"sources":["C:/ysx/xm/mark/web/node_modules/open-im-sdk-wasm/lib/api/database/groupRequest.js"],"sourcesContent":["import { DatabaseErrorCode } from '../../constant';\nimport { insertGroupRequest as databaseInsertGroupRequest, deleteGroupRequest as databaseDeleteGroupRequest, updateGroupRequest as databaseUpdateGroupRequest, getSendGroupApplication as databaseGetSendGroupApplication, insertAdminGroupRequest as databaseInsertAdminGroupRequest, deleteAdminGroupRequest as databaseDeleteAdminGroupRequest, updateAdminGroupRequest as databaseUpdateAdminGroupRequest, getAdminGroupApplication as databaseGetAdminGroupApplication, } from '../../sqls';\nimport { convertToSnakeCaseObject, convertObjectField, formatResponse, converSqlExecResult, } from '../../utils';\nimport { getInstance } from './instance';\nexport async function insertGroupRequest(localGroupRequestStr) {\n    try {\n        const db = await getInstance();\n        const localGroupRequest = convertToSnakeCaseObject(convertObjectField(JSON.parse(localGroupRequestStr), {\n            groupFaceURL: 'face_url',\n            userFaceURL: 'user_face_url',\n            handledMsg: 'handle_msg',\n            handledTime: 'handle_time',\n        }));\n        databaseInsertGroupRequest(db, localGroupRequest);\n        return formatResponse('');\n    }\n    catch (e) {\n        console.error(e);\n        return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n    }\n}\nexport async function deleteGroupRequest(groupID, userID) {\n    try {\n        const db = await getInstance();\n        databaseDeleteGroupRequest(db, groupID, userID);\n        return formatResponse('');\n    }\n    catch (e) {\n        console.error(e);\n        return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n    }\n}\nexport async function updateGroupRequest(localGroupRequestStr) {\n    try {\n        const db = await getInstance();\n        const localGroupRequest = convertToSnakeCaseObject(convertObjectField(JSON.parse(localGroupRequestStr), {\n            groupFaceURL: 'face_url',\n            userFaceURL: 'user_face_url',\n            handledMsg: 'handle_msg',\n            handledTime: 'handle_time',\n        }));\n        databaseUpdateGroupRequest(db, localGroupRequest);\n        return formatResponse('');\n    }\n    catch (e) {\n        console.error(e);\n        return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n    }\n}\nexport async function getSendGroupApplication() {\n    try {\n        const db = await getInstance();\n        const execResult = databaseGetSendGroupApplication(db);\n        return formatResponse(converSqlExecResult(execResult[0], 'CamelCase', [], {\n            face_url: 'groupFaceURL',\n            user_face_url: 'userFaceURL',\n            handle_msg: 'handledMsg',\n            handle_time: 'handledTime',\n        }));\n    }\n    catch (e) {\n        console.error(e);\n        return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n    }\n}\nexport async function insertAdminGroupRequest(localAdminGroupRequestStr) {\n    try {\n        const db = await getInstance();\n        const localAminGroupRequest = convertToSnakeCaseObject(convertObjectField(JSON.parse(localAdminGroupRequestStr), {\n            groupFaceURL: 'face_url',\n            userFaceURL: 'user_face_url',\n            handledMsg: 'handle_msg',\n            handledTime: 'handle_time',\n        }));\n        databaseInsertAdminGroupRequest(db, localAminGroupRequest);\n        return formatResponse('');\n    }\n    catch (e) {\n        console.error(e);\n        return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n    }\n}\nexport async function deleteAdminGroupRequest(groupID, userID) {\n    try {\n        const db = await getInstance();\n        databaseDeleteAdminGroupRequest(db, groupID, userID);\n        return formatResponse('');\n    }\n    catch (e) {\n        console.error(e);\n        return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n    }\n}\nexport async function updateAdminGroupRequest(localGroupRequestStr) {\n    try {\n        const db = await getInstance();\n        const localGroupRequest = convertToSnakeCaseObject(convertObjectField(JSON.parse(localGroupRequestStr), {\n            groupFaceURL: 'face_url',\n            userFaceURL: 'user_face_url',\n            handledMsg: 'handle_msg',\n            handledTime: 'handle_time',\n        }));\n        databaseUpdateAdminGroupRequest(db, localGroupRequest);\n        return formatResponse('');\n    }\n    catch (e) {\n        console.error(e);\n        return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n    }\n}\nexport async function getAdminGroupApplication() {\n    try {\n        const db = await getInstance();\n        const execResult = databaseGetAdminGroupApplication(db);\n        return formatResponse(converSqlExecResult(execResult[0], 'CamelCase', [], {\n            face_url: 'groupFaceURL',\n            user_face_url: 'userFaceURL',\n            handle_msg: 'handledMsg',\n            handle_time: 'handledTime',\n        }));\n    }\n    catch (e) {\n        console.error(e);\n        return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}