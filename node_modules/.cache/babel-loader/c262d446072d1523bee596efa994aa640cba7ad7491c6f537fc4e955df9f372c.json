{"ast":null,"code":"import { DatabaseErrorCode } from '../../constant';\nimport { batchInsertConversationUnreadMessageList as databaseBatchInsertConversationUnreadMessageList, deleteConversationUnreadMessageList as databaseDeleteConversationUnreadMessageList } from '../../sqls';\nimport { convertToSnakeCaseObject, formatResponse } from '../../utils';\nimport { getInstance } from './instance';\nexport async function deleteConversationUnreadMessageList(conversationID, sendTime) {\n  try {\n    const db = await getInstance();\n    databaseDeleteConversationUnreadMessageList(db, conversationID, sendTime);\n    const modifed = db.getRowsModified();\n    return formatResponse(modifed);\n  } catch (e) {\n    console.error(e);\n    return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n  }\n}\nexport async function batchInsertConversationUnreadMessageList(messageListStr) {\n  try {\n    const db = await getInstance();\n    const messageList = JSON.parse(messageListStr).map(v => convertToSnakeCaseObject(v));\n    const execResult = databaseBatchInsertConversationUnreadMessageList(db, messageList);\n    return formatResponse(execResult[0]);\n  } catch (e) {\n    console.error(e);\n    return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n  }\n}","map":{"version":3,"names":["DatabaseErrorCode","batchInsertConversationUnreadMessageList","databaseBatchInsertConversationUnreadMessageList","deleteConversationUnreadMessageList","databaseDeleteConversationUnreadMessageList","convertToSnakeCaseObject","formatResponse","getInstance","conversationID","sendTime","db","modifed","getRowsModified","e","console","error","undefined","ErrorInit","JSON","stringify","messageListStr","messageList","parse","map","v","execResult"],"sources":["C:/ysx/xm/mark/web/node_modules/open-im-sdk-wasm/lib/api/database/unreadMessage.js"],"sourcesContent":["import { DatabaseErrorCode } from '../../constant';\nimport { batchInsertConversationUnreadMessageList as databaseBatchInsertConversationUnreadMessageList, deleteConversationUnreadMessageList as databaseDeleteConversationUnreadMessageList, } from '../../sqls';\nimport { convertToSnakeCaseObject, formatResponse } from '../../utils';\nimport { getInstance } from './instance';\nexport async function deleteConversationUnreadMessageList(conversationID, sendTime) {\n    try {\n        const db = await getInstance();\n        databaseDeleteConversationUnreadMessageList(db, conversationID, sendTime);\n        const modifed = db.getRowsModified();\n        return formatResponse(modifed);\n    }\n    catch (e) {\n        console.error(e);\n        return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n    }\n}\nexport async function batchInsertConversationUnreadMessageList(messageListStr) {\n    try {\n        const db = await getInstance();\n        const messageList = JSON.parse(messageListStr).map((v) => convertToSnakeCaseObject(v));\n        const execResult = databaseBatchInsertConversationUnreadMessageList(db, messageList);\n        return formatResponse(execResult[0]);\n    }\n    catch (e) {\n        console.error(e);\n        return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n    }\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,gBAAgB;AAClD,SAASC,wCAAwC,IAAIC,gDAAgD,EAAEC,mCAAmC,IAAIC,2CAA2C,QAAS,YAAY;AAC9M,SAASC,wBAAwB,EAAEC,cAAc,QAAQ,aAAa;AACtE,SAASC,WAAW,QAAQ,YAAY;AACxC,OAAO,eAAeJ,mCAAmCA,CAACK,cAAc,EAAEC,QAAQ,EAAE;EAChF,IAAI;IACA,MAAMC,EAAE,GAAG,MAAMH,WAAW,CAAC,CAAC;IAC9BH,2CAA2C,CAACM,EAAE,EAAEF,cAAc,EAAEC,QAAQ,CAAC;IACzE,MAAME,OAAO,GAAGD,EAAE,CAACE,eAAe,CAAC,CAAC;IACpC,OAAON,cAAc,CAACK,OAAO,CAAC;EAClC,CAAC,CACD,OAAOE,CAAC,EAAE;IACNC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;IAChB,OAAOP,cAAc,CAACU,SAAS,EAAEhB,iBAAiB,CAACiB,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACN,CAAC,CAAC,CAAC;EACpF;AACJ;AACA,OAAO,eAAeZ,wCAAwCA,CAACmB,cAAc,EAAE;EAC3E,IAAI;IACA,MAAMV,EAAE,GAAG,MAAMH,WAAW,CAAC,CAAC;IAC9B,MAAMc,WAAW,GAAGH,IAAI,CAACI,KAAK,CAACF,cAAc,CAAC,CAACG,GAAG,CAAEC,CAAC,IAAKnB,wBAAwB,CAACmB,CAAC,CAAC,CAAC;IACtF,MAAMC,UAAU,GAAGvB,gDAAgD,CAACQ,EAAE,EAAEW,WAAW,CAAC;IACpF,OAAOf,cAAc,CAACmB,UAAU,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC,CACD,OAAOZ,CAAC,EAAE;IACNC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;IAChB,OAAOP,cAAc,CAACU,SAAS,EAAEhB,iBAAiB,CAACiB,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACN,CAAC,CAAC,CAAC;EACpF;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}