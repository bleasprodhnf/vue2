{"ast":null,"code":"import squel from 'squel';\nexport function localFriendRequests(db) {\n  return db.exec(`\n      create table if not exists 'local_friend_requests'\n      (\n          'from_user_id'    varchar(64),\n          'from_nickname'   varchar(255),\n          'from_face_url'   varchar(255),\n          'from_gender'     INTEGER,\n          'to_user_id'   varchar(64),\n          'to_nickname'   varchar(255),\n          'to_face_url'     varchar(255),\n          'to_gender'      INTEGER,\n          'handle_result'    INTEGER,\n          'req_msg'        varchar(255),\n          'create_time'   INTEGER,\n          'handler_user_id'  varchar(64),\n          'handle_msg'    varchar(255),\n          'handle_time'    INTEGER,\n          'ex'           varchar(1024),\n          'attached_info'   varchar(1024),\n          primary key ('from_user_id', 'to_user_id')\n      );  \n      `);\n}\nexport function insertFriendRequest(db, localFriendRequest) {\n  const sql = squel.insert().into('local_friend_requests').setFields(localFriendRequest).toString();\n  return db.exec(sql);\n}\nexport function deleteFriendRequestBothUserID(db, fromUserID, toUserID) {\n  return db.exec(`\n      delete\n      from local_friend_requests\n      where from_user_id = \"${fromUserID}\"\n        and to_user_id = \"${toUserID}\"\n      `);\n}\nexport function updateFriendRequest(db, localFriendRequest) {\n  const sql = squel.update().table('local_friend_requests').setFields(localFriendRequest).where(`from_user_id = '${localFriendRequest.from_user_id}' and to_user_id = '${localFriendRequest.to_user_id}'`).toString();\n  return db.exec(sql);\n}\nexport function getRecvFriendApplication(db, loginUserID) {\n  return db.exec(`\n      select *\n      from local_friend_requests\n      where to_user_id = \"${loginUserID}\"\n      order by create_time desc\n      `);\n}\nexport function getSendFriendApplication(db, loginUserID) {\n  return db.exec(`\n      select * from local_friend_requests\n      where from_user_id = \"${loginUserID}\"\n      order by create_time desc\n      `);\n}\nexport function getFriendApplicationByBothID(db, fromUserID, toUserID) {\n  return db.exec(`\n      select *\n        from local_friend_requests\n        where from_user_id = \"${fromUserID}\"\n        and to_user_id = \"${toUserID}\"\n        limit 1\n      `);\n}","map":{"version":3,"names":["squel","localFriendRequests","db","exec","insertFriendRequest","localFriendRequest","sql","insert","into","setFields","toString","deleteFriendRequestBothUserID","fromUserID","toUserID","updateFriendRequest","update","table","where","from_user_id","to_user_id","getRecvFriendApplication","loginUserID","getSendFriendApplication","getFriendApplicationByBothID"],"sources":["C:/ysx/xm/mark/web/node_modules/open-im-sdk-wasm/lib/sqls/localFriendRequest.js"],"sourcesContent":["import squel from 'squel';\nexport function localFriendRequests(db) {\n    return db.exec(`\n      create table if not exists 'local_friend_requests'\n      (\n          'from_user_id'    varchar(64),\n          'from_nickname'   varchar(255),\n          'from_face_url'   varchar(255),\n          'from_gender'     INTEGER,\n          'to_user_id'   varchar(64),\n          'to_nickname'   varchar(255),\n          'to_face_url'     varchar(255),\n          'to_gender'      INTEGER,\n          'handle_result'    INTEGER,\n          'req_msg'        varchar(255),\n          'create_time'   INTEGER,\n          'handler_user_id'  varchar(64),\n          'handle_msg'    varchar(255),\n          'handle_time'    INTEGER,\n          'ex'           varchar(1024),\n          'attached_info'   varchar(1024),\n          primary key ('from_user_id', 'to_user_id')\n      );  \n      `);\n}\nexport function insertFriendRequest(db, localFriendRequest) {\n    const sql = squel\n        .insert()\n        .into('local_friend_requests')\n        .setFields(localFriendRequest)\n        .toString();\n    return db.exec(sql);\n}\nexport function deleteFriendRequestBothUserID(db, fromUserID, toUserID) {\n    return db.exec(`\n      delete\n      from local_friend_requests\n      where from_user_id = \"${fromUserID}\"\n        and to_user_id = \"${toUserID}\"\n      `);\n}\nexport function updateFriendRequest(db, localFriendRequest) {\n    const sql = squel\n        .update()\n        .table('local_friend_requests')\n        .setFields(localFriendRequest)\n        .where(`from_user_id = '${localFriendRequest.from_user_id}' and to_user_id = '${localFriendRequest.to_user_id}'`)\n        .toString();\n    return db.exec(sql);\n}\nexport function getRecvFriendApplication(db, loginUserID) {\n    return db.exec(`\n      select *\n      from local_friend_requests\n      where to_user_id = \"${loginUserID}\"\n      order by create_time desc\n      `);\n}\nexport function getSendFriendApplication(db, loginUserID) {\n    return db.exec(`\n      select * from local_friend_requests\n      where from_user_id = \"${loginUserID}\"\n      order by create_time desc\n      `);\n}\nexport function getFriendApplicationByBothID(db, fromUserID, toUserID) {\n    return db.exec(`\n      select *\n        from local_friend_requests\n        where from_user_id = \"${fromUserID}\"\n        and to_user_id = \"${toUserID}\"\n        limit 1\n      `);\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,SAASC,mBAAmBA,CAACC,EAAE,EAAE;EACpC,OAAOA,EAAE,CAACC,IAAI,CAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CAAC;AACR;AACA,OAAO,SAASC,mBAAmBA,CAACF,EAAE,EAAEG,kBAAkB,EAAE;EACxD,MAAMC,GAAG,GAAGN,KAAK,CACZO,MAAM,CAAC,CAAC,CACRC,IAAI,CAAC,uBAAuB,CAAC,CAC7BC,SAAS,CAACJ,kBAAkB,CAAC,CAC7BK,QAAQ,CAAC,CAAC;EACf,OAAOR,EAAE,CAACC,IAAI,CAACG,GAAG,CAAC;AACvB;AACA,OAAO,SAASK,6BAA6BA,CAACT,EAAE,EAAEU,UAAU,EAAEC,QAAQ,EAAE;EACpE,OAAOX,EAAE,CAACC,IAAI,CAAE;AACpB;AACA;AACA,8BAA8BS,UAAW;AACzC,4BAA4BC,QAAS;AACrC,OAAO,CAAC;AACR;AACA,OAAO,SAASC,mBAAmBA,CAACZ,EAAE,EAAEG,kBAAkB,EAAE;EACxD,MAAMC,GAAG,GAAGN,KAAK,CACZe,MAAM,CAAC,CAAC,CACRC,KAAK,CAAC,uBAAuB,CAAC,CAC9BP,SAAS,CAACJ,kBAAkB,CAAC,CAC7BY,KAAK,CAAE,mBAAkBZ,kBAAkB,CAACa,YAAa,uBAAsBb,kBAAkB,CAACc,UAAW,GAAE,CAAC,CAChHT,QAAQ,CAAC,CAAC;EACf,OAAOR,EAAE,CAACC,IAAI,CAACG,GAAG,CAAC;AACvB;AACA,OAAO,SAASc,wBAAwBA,CAAClB,EAAE,EAAEmB,WAAW,EAAE;EACtD,OAAOnB,EAAE,CAACC,IAAI,CAAE;AACpB;AACA;AACA,4BAA4BkB,WAAY;AACxC;AACA,OAAO,CAAC;AACR;AACA,OAAO,SAASC,wBAAwBA,CAACpB,EAAE,EAAEmB,WAAW,EAAE;EACtD,OAAOnB,EAAE,CAACC,IAAI,CAAE;AACpB;AACA,8BAA8BkB,WAAY;AAC1C;AACA,OAAO,CAAC;AACR;AACA,OAAO,SAASE,4BAA4BA,CAACrB,EAAE,EAAEU,UAAU,EAAEC,QAAQ,EAAE;EACnE,OAAOX,EAAE,CAACC,IAAI,CAAE;AACpB;AACA;AACA,gCAAgCS,UAAW;AAC3C,4BAA4BC,QAAS;AACrC;AACA,OAAO,CAAC;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}