{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { DatabaseErrorCode } from '../../constant';\nimport { locaBlacks, localFriends, localGroups, localFriendRequests, localChatLogs, localErrChatLogs, localGroupRequests, localAdminGroupRequests, localConversations, localUsers, localSuperGroups, localConversationUnreadMessages, localGroupMembers, tempCacheLocalChatLogs } from '../../sqls';\nimport { formatResponse } from '../../utils';\nimport { getInstance, resetInstance } from './instance';\nexport async function init(userId, dir) {\n  console.info(`=> (database api) invoke init with args ${JSON.stringify({\n    userId,\n    dir\n  })}`);\n  try {\n    console.time('SDK => (performance measure) init database used ');\n    const db = await getInstance(`${dir}${userId}.sqlite`);\n    const results = [];\n    const execResultLocalChatLogs = localChatLogs(db);\n    const execResultLocalConversations = localConversations(db);\n    const execResultLocalUsers = localUsers(db);\n    const execResultLocalBlack = locaBlacks(db);\n    const execResultLocalFriend = localFriends(db);\n    const execResuLocalGroup = localGroups(db);\n    const execResuLocalErrChatLos = localErrChatLogs(db);\n    const execResuLocalGroupRequest = localGroupRequests(db);\n    const execResuLocalGroupMembers = localGroupMembers(db);\n    const execResuLocalAdminGroupRequest = localAdminGroupRequests(db);\n    const execResultlocaFendRequest = localFriendRequests(db);\n    const execResultLocalSuperGroups = localSuperGroups(db);\n    const execResultTempCacheLocalChatLogs = tempCacheLocalChatLogs(db);\n    const execResultLocalConversationUnreadMessages = localConversationUnreadMessages(db);\n    results.push(...[execResultLocalChatLogs, execResultLocalConversations, execResultLocalUsers, execResultLocalSuperGroups, execResultLocalConversationUnreadMessages, execResultLocalBlack, execResultLocalFriend, execResuLocalGroup, execResuLocalGroupMembers, execResultlocaFendRequest, execResuLocalErrChatLos, execResuLocalGroupRequest, execResuLocalAdminGroupRequest, execResultTempCacheLocalChatLogs]);\n    return formatResponse(results);\n  } catch (e) {\n    console.error(e);\n    return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n  } finally {\n    console.timeEnd('SDK => (performance measure) init database used ');\n  }\n}\nexport async function close() {\n  console.info('=> (database api) invoke close');\n  try {\n    await resetInstance();\n    return formatResponse('');\n  } catch (e) {\n    console.error(e);\n    return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n  }\n}","map":{"version":3,"names":["DatabaseErrorCode","locaBlacks","localFriends","localGroups","localFriendRequests","localChatLogs","localErrChatLogs","localGroupRequests","localAdminGroupRequests","localConversations","localUsers","localSuperGroups","localConversationUnreadMessages","localGroupMembers","tempCacheLocalChatLogs","formatResponse","getInstance","resetInstance","init","userId","dir","console","info","JSON","stringify","time","db","results","execResultLocalChatLogs","execResultLocalConversations","execResultLocalUsers","execResultLocalBlack","execResultLocalFriend","execResuLocalGroup","execResuLocalErrChatLos","execResuLocalGroupRequest","execResuLocalGroupMembers","execResuLocalAdminGroupRequest","execResultlocaFendRequest","execResultLocalSuperGroups","execResultTempCacheLocalChatLogs","execResultLocalConversationUnreadMessages","push","e","error","undefined","ErrorInit","timeEnd","close"],"sources":["C:/ysx/xm/mark/web/src/utils/lib/api/database/init.js"],"sourcesContent":["import { DatabaseErrorCode } from '../../constant';\nimport { locaBlacks, localFriends, localGroups, localFriendRequests, localChatLogs, localErrChatLogs, localGroupRequests, localAdminGroupRequests, localConversations, localUsers, localSuperGroups, localConversationUnreadMessages, localGroupMembers, tempCacheLocalChatLogs, } from '../../sqls';\nimport { formatResponse } from '../../utils';\nimport { getInstance, resetInstance } from './instance';\nexport async function init(userId, dir) {\n    console.info(`=> (database api) invoke init with args ${JSON.stringify({\n        userId,\n        dir,\n    })}`);\n    try {\n        console.time('SDK => (performance measure) init database used ');\n        const db = await getInstance(`${dir}${userId}.sqlite`);\n        const results = [];\n        const execResultLocalChatLogs = localChatLogs(db);\n        const execResultLocalConversations = localConversations(db);\n        const execResultLocalUsers = localUsers(db);\n        const execResultLocalBlack = locaBlacks(db);\n        const execResultLocalFriend = localFriends(db);\n        const execResuLocalGroup = localGroups(db);\n        const execResuLocalErrChatLos = localErrChatLogs(db);\n        const execResuLocalGroupRequest = localGroupRequests(db);\n        const execResuLocalGroupMembers = localGroupMembers(db);\n        const execResuLocalAdminGroupRequest = localAdminGroupRequests(db);\n        const execResultlocaFendRequest = localFriendRequests(db);\n        const execResultLocalSuperGroups = localSuperGroups(db);\n        const execResultTempCacheLocalChatLogs = tempCacheLocalChatLogs(db);\n        const execResultLocalConversationUnreadMessages = localConversationUnreadMessages(db);\n        results.push(...[\n            execResultLocalChatLogs,\n            execResultLocalConversations,\n            execResultLocalUsers,\n            execResultLocalSuperGroups,\n            execResultLocalConversationUnreadMessages,\n            execResultLocalBlack,\n            execResultLocalFriend,\n            execResuLocalGroup,\n            execResuLocalGroupMembers,\n            execResultlocaFendRequest,\n            execResuLocalErrChatLos,\n            execResuLocalGroupRequest,\n            execResuLocalAdminGroupRequest,\n            execResultTempCacheLocalChatLogs,\n        ]);\n        return formatResponse(results);\n    }\n    catch (e) {\n        console.error(e);\n        return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n    }\n    finally {\n        console.timeEnd('SDK => (performance measure) init database used ');\n    }\n}\nexport async function close() {\n    console.info('=> (database api) invoke close');\n    try {\n        await resetInstance();\n        return formatResponse('');\n    }\n    catch (e) {\n        console.error(e);\n        return formatResponse(undefined, DatabaseErrorCode.ErrorInit, JSON.stringify(e));\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}