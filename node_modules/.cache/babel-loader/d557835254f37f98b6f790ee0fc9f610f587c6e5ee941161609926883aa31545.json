{"ast":null,"code":"import squel from 'squel';\nexport function localAdminGroupRequests(db) {\n  return db.exec(`\n    create table if not exists \"local_admin_group_requests\" (\n        \"group_id\" varchar(64),\n        \"group_name\" text,\n        \"notification\" varchar(255),\n        \"introduction\" varchar(255),\n        \"face_url\" varchar(255),\n        \"create_time\" integer,\n        \"status\" integer,\n        \"creator_user_id\" varchar(64),\n        \"group_type\" integer,\n        \"owner_user_id\" varchar(64),\n        \"member_count\" integer,\n        \"user_id\" varchar(64),\n        \"nickname\" varchar(255),\n        \"user_face_url\" varchar(255),\n        \"gender\" integer,\n        \"handle_result\" integer,\n        \"req_msg\" varchar(255),\n        \"handle_msg\" varchar(255),\n        \"req_time\" integer,\n        \"handle_user_id\" varchar(64),\n        \"handle_time\" integer,\n        \"ex\" varchar(1024),\n        \"attached_info\" varchar(1024),\n        \"join_source\" integer,\n        \"inviter_user_id\" text,\n        PRIMARY KEY (\"group_id\", \"user_id\")\n      );\n      `);\n}\nexport function insertAdminGroupRequest(db, localGroupRequest) {\n  const sql = squel.insert().into('local_admin_group_requests').setFields(localGroupRequest).toString();\n  return db.exec(sql);\n}\nexport function deleteAdminGroupRequest(db, groupID, userID) {\n  return db.exec(`\n        delete\n        from local_admin_group_requests\n        where group_id = \"${groupID}\"\n          and user_id = \"${userID}\"\n        `);\n}\nexport function updateAdminGroupRequest(db, localGroupRequest) {\n  const sql = squel.update().table('local_admin_group_requests').setFields(localGroupRequest).where(`group_id = '${localGroupRequest.group_id}' and user_id = '${localGroupRequest.user_id}'`).toString();\n  return db.exec(sql);\n}\nexport function getAdminGroupApplication(db) {\n  return db.exec(`\n        select *\n        from local_admin_group_requests\n        order by create_time desc\n        `);\n}","map":{"version":3,"names":["squel","localAdminGroupRequests","db","exec","insertAdminGroupRequest","localGroupRequest","sql","insert","into","setFields","toString","deleteAdminGroupRequest","groupID","userID","updateAdminGroupRequest","update","table","where","group_id","user_id","getAdminGroupApplication"],"sources":["C:/ysx/xm/mark/web/node_modules/open-im-sdk-wasm/lib/sqls/localAdminGroupRequests.js"],"sourcesContent":["import squel from 'squel';\nexport function localAdminGroupRequests(db) {\n    return db.exec(`\n    create table if not exists \"local_admin_group_requests\" (\n        \"group_id\" varchar(64),\n        \"group_name\" text,\n        \"notification\" varchar(255),\n        \"introduction\" varchar(255),\n        \"face_url\" varchar(255),\n        \"create_time\" integer,\n        \"status\" integer,\n        \"creator_user_id\" varchar(64),\n        \"group_type\" integer,\n        \"owner_user_id\" varchar(64),\n        \"member_count\" integer,\n        \"user_id\" varchar(64),\n        \"nickname\" varchar(255),\n        \"user_face_url\" varchar(255),\n        \"gender\" integer,\n        \"handle_result\" integer,\n        \"req_msg\" varchar(255),\n        \"handle_msg\" varchar(255),\n        \"req_time\" integer,\n        \"handle_user_id\" varchar(64),\n        \"handle_time\" integer,\n        \"ex\" varchar(1024),\n        \"attached_info\" varchar(1024),\n        \"join_source\" integer,\n        \"inviter_user_id\" text,\n        PRIMARY KEY (\"group_id\", \"user_id\")\n      );\n      `);\n}\nexport function insertAdminGroupRequest(db, localGroupRequest) {\n    const sql = squel\n        .insert()\n        .into('local_admin_group_requests')\n        .setFields(localGroupRequest)\n        .toString();\n    return db.exec(sql);\n}\nexport function deleteAdminGroupRequest(db, groupID, userID) {\n    return db.exec(`\n        delete\n        from local_admin_group_requests\n        where group_id = \"${groupID}\"\n          and user_id = \"${userID}\"\n        `);\n}\nexport function updateAdminGroupRequest(db, localGroupRequest) {\n    const sql = squel\n        .update()\n        .table('local_admin_group_requests')\n        .setFields(localGroupRequest)\n        .where(`group_id = '${localGroupRequest.group_id}' and user_id = '${localGroupRequest.user_id}'`)\n        .toString();\n    return db.exec(sql);\n}\nexport function getAdminGroupApplication(db) {\n    return db.exec(`\n        select *\n        from local_admin_group_requests\n        order by create_time desc\n        `);\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,SAASC,uBAAuBA,CAACC,EAAE,EAAE;EACxC,OAAOA,EAAE,CAACC,IAAI,CAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CAAC;AACR;AACA,OAAO,SAASC,uBAAuBA,CAACF,EAAE,EAAEG,iBAAiB,EAAE;EAC3D,MAAMC,GAAG,GAAGN,KAAK,CACZO,MAAM,CAAC,CAAC,CACRC,IAAI,CAAC,4BAA4B,CAAC,CAClCC,SAAS,CAACJ,iBAAiB,CAAC,CAC5BK,QAAQ,CAAC,CAAC;EACf,OAAOR,EAAE,CAACC,IAAI,CAACG,GAAG,CAAC;AACvB;AACA,OAAO,SAASK,uBAAuBA,CAACT,EAAE,EAAEU,OAAO,EAAEC,MAAM,EAAE;EACzD,OAAOX,EAAE,CAACC,IAAI,CAAE;AACpB;AACA;AACA,4BAA4BS,OAAQ;AACpC,2BAA2BC,MAAO;AAClC,SAAS,CAAC;AACV;AACA,OAAO,SAASC,uBAAuBA,CAACZ,EAAE,EAAEG,iBAAiB,EAAE;EAC3D,MAAMC,GAAG,GAAGN,KAAK,CACZe,MAAM,CAAC,CAAC,CACRC,KAAK,CAAC,4BAA4B,CAAC,CACnCP,SAAS,CAACJ,iBAAiB,CAAC,CAC5BY,KAAK,CAAE,eAAcZ,iBAAiB,CAACa,QAAS,oBAAmBb,iBAAiB,CAACc,OAAQ,GAAE,CAAC,CAChGT,QAAQ,CAAC,CAAC;EACf,OAAOR,EAAE,CAACC,IAAI,CAACG,GAAG,CAAC;AACvB;AACA,OAAO,SAASc,wBAAwBA,CAAClB,EAAE,EAAE;EACzC,OAAOA,EAAE,CAACC,IAAI,CAAE;AACpB;AACA;AACA;AACA,SAAS,CAAC;AACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}