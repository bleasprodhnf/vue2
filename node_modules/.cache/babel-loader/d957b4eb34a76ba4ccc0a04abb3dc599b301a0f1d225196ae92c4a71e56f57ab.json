{"ast":null,"code":"import squel from 'squel';\nexport function tempCacheLocalChatLogs(db) {\n  return db.exec(`\n    create table if not exists 'temp_cache_local_chat_logs' (\n        'client_msg_id' char(64),\n        'server_msg_id' char(64),\n        'send_id' char(64),\n        'recv_id' char(64),\n        'sender_platform_id' integer,\n        'sender_nick_name' varchar(255),\n        'sender_face_url' varchar(255),\n        'session_type' integer,\n        'msg_from' integer,\n        'content_type' integer,\n        'content' varchar(1000),\n        'is_read' numeric,\n        'status' integer,\n        'seq' integer DEFAULT 0,\n        'send_time' integer,\n        'create_time' integer,\n        'attached_info' varchar(1024),\n        'ex' varchar(1024),\n        PRIMARY KEY ('client_msg_id')\n      );\n      `);\n}\nexport function batchInsertTempCacheMessageList(db, messageList) {\n  const sql = squel.insert().into('temp_cache_local_chat_logs').setFieldsRows(messageList).toString();\n  return db.exec(sql);\n}","map":{"version":3,"names":["squel","tempCacheLocalChatLogs","db","exec","batchInsertTempCacheMessageList","messageList","sql","insert","into","setFieldsRows","toString"],"sources":["C:/ysx/xm/mark/web/node_modules/open-im-sdk-wasm/lib/sqls/tempCacheLocalChatLogs.js"],"sourcesContent":["import squel from 'squel';\nexport function tempCacheLocalChatLogs(db) {\n    return db.exec(`\n    create table if not exists 'temp_cache_local_chat_logs' (\n        'client_msg_id' char(64),\n        'server_msg_id' char(64),\n        'send_id' char(64),\n        'recv_id' char(64),\n        'sender_platform_id' integer,\n        'sender_nick_name' varchar(255),\n        'sender_face_url' varchar(255),\n        'session_type' integer,\n        'msg_from' integer,\n        'content_type' integer,\n        'content' varchar(1000),\n        'is_read' numeric,\n        'status' integer,\n        'seq' integer DEFAULT 0,\n        'send_time' integer,\n        'create_time' integer,\n        'attached_info' varchar(1024),\n        'ex' varchar(1024),\n        PRIMARY KEY ('client_msg_id')\n      );\n      `);\n}\nexport function batchInsertTempCacheMessageList(db, messageList) {\n    const sql = squel\n        .insert()\n        .into('temp_cache_local_chat_logs')\n        .setFieldsRows(messageList)\n        .toString();\n    return db.exec(sql);\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,SAASC,sBAAsBA,CAACC,EAAE,EAAE;EACvC,OAAOA,EAAE,CAACC,IAAI,CAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,CAAC;AACR;AACA,OAAO,SAASC,+BAA+BA,CAACF,EAAE,EAAEG,WAAW,EAAE;EAC7D,MAAMC,GAAG,GAAGN,KAAK,CACZO,MAAM,CAAC,CAAC,CACRC,IAAI,CAAC,4BAA4B,CAAC,CAClCC,aAAa,CAACJ,WAAW,CAAC,CAC1BK,QAAQ,CAAC,CAAC;EACf,OAAOR,EAAE,CAACC,IAAI,CAACG,GAAG,CAAC;AACvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}