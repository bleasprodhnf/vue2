{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nimport { RPC, RPCMessageEvent } from 'rpc-shooter';\nimport { init, close,\n// message\ngetMessage, getMultipleMessage, getSendingMessageList, getNormalMsgSeq, updateMessageTimeAndStatus, updateMessage, updateColumnsMessage, insertMessage, batchInsertMessageList, getMessageList, getMessageListNoTime, messageIfExists, isExistsInErrChatLogBySeq, messageIfExistsBySeq, getAbnormalMsgSeq, getAbnormalMsgSeqList, batchInsertExceptionMsg, searchMessageByKeyword, searchMessageByContentType, searchMessageByContentTypeAndKeyword, updateMsgSenderNickname, updateMsgSenderFaceURL, updateMsgSenderFaceURLAndSenderNickname, getMsgSeqByClientMsgID, getMsgSeqListByGroupID, getMsgSeqListByPeerUserID, getMsgSeqListBySelfUserID, deleteAllMessage, getAllUnDeleteMessageSeqList, updateSingleMessageHasRead, updateGroupMessageHasRead, updateMessageStatusBySourceID,\n// conversation\ngetAllConversationList, getAllConversationListToSync, getHiddenConversationList, getConversation, getMultipleConversation, updateColumnsConversation, decrConversationUnreadCount, batchInsertConversationList, insertConversation, getTotalUnreadMsgCount, batchUpdateConversationList, clearAllConversation, clearConversation, conversationIfExists, deleteConversation, getConversationByUserID, getConversationListSplit, incrConversationUnreadCount, removeConversationDraft, resetAllConversation, resetConversation, setConversationDraft, setMultipleConversationRecvMsgOpt, unPinConversation,\n// users\ngetLoginUser, insertLoginUser, updateLoginUserByMap,\n// super group\ngetJoinedSuperGroupList, getJoinedSuperGroupIDList, getSuperGroupInfoByGroupID, deleteSuperGroup, insertSuperGroup, updateSuperGroup,\n// unread messages\ndeleteConversationUnreadMessageList, batchInsertConversationUnreadMessageList,\n// super group messages\nsuperGroupGetMessage, superGroupGetMultipleMessage, getSuperGroupNormalMsgSeq, superGroupGetNormalMinSeq, superGroupUpdateMessageTimeAndStatus, superGroupUpdateMessage, superGroupInsertMessage, superGroupBatchInsertMessageList, superGroupGetMessageListNoTime, superGroupGetMessageList, superGroupDeleteAllMessage, superGroupGetMsgSeqByClientMsgID, superGroupGetSendingMessageList, superGroupSearchMessageByContentType, superGroupSearchMessageByKeyword, superGroupSearchMessageByContentTypeAndKeyword, superGroupUpdateGroupMessageHasRead, superGroupUpdateMessageStatusBySourceID, superGroupUpdateColumnsMessage, superGroupUpdateMsgSenderFaceURLAndSenderNickname, superGroupSearchAllMessageByContentType,\n// black\ngetBlackList, getBlackListUserID, getBlackInfoByBlockUserID, getBlackInfoList, insertBlack, deleteBlack, updateBlack,\n// friendRequest\ninsertFriendRequest, deleteFriendRequestBothUserID, updateFriendRequest, getRecvFriendApplication, getSendFriendApplication, getFriendApplicationByBothID,\n// groups\ninsertGroup, deleteGroup, updateGroup, getJoinedGroupList, getGroupInfoByGroupID, getAllGroupInfoByGroupIDOrGroupName, subtractMemberCount, addMemberCount, getJoinedWorkingGroupIDList, getJoinedWorkingGroupList,\n// groupRequest\ninsertGroupRequest, deleteGroupRequest, updateGroupRequest, getSendGroupApplication, insertAdminGroupRequest, deleteAdminGroupRequest, updateAdminGroupRequest, getAdminGroupApplication,\n// friend\ninsertFriend, deleteFriend, updateFriend, getAllFriendList, searchFriendList, getFriendInfoList, getFriendInfoByFriendUserID,\n// groupMember\nbatchInsertGroupMember, deleteGroupAllMembers, deleteGroupMember, getAllGroupMemberList, getAllGroupMemberUserIDList, getGroupAdminID, getGroupMemberCount, getGroupMemberInfoByGroupIDUserID, getGroupMemberListByGroupID, getGroupMemberListSplit, getGroupMemberListSplitByJoinTimeFilter, getGroupMemberOwner, getGroupMemberOwnerAndAdmin, getGroupMemberUIDListByGroupID, getGroupOwnerAndAdminByGroupID, getGroupSomeMemberInfo, insertGroupMember, searchGroupMembers, updateGroupMember, updateGroupMemberField,\n// temp cache chatlogs\nbatchInsertTempCacheMessageList, InsertTempCacheMessage } from '../api/database';\nimport { getInstance } from './database/instance';\nconst ctx = self;\nconst rpc = new RPC({\n  event: new RPCMessageEvent({\n    currentEndpoint: ctx,\n    targetEndpoint: ctx\n  })\n});\nrpc.registerMethod('initDB', init);\nrpc.registerMethod('close', close);\n// message\nrpc.registerMethod('getMessage', getMessage);\nrpc.registerMethod('getMultipleMessage', getMultipleMessage);\nrpc.registerMethod('getSendingMessageList', getSendingMessageList);\nrpc.registerMethod('getNormalMsgSeq', getNormalMsgSeq);\nrpc.registerMethod('updateMessageTimeAndStatus', updateMessageTimeAndStatus);\nrpc.registerMethod('updateMessage', updateMessage);\nrpc.registerMethod('updateColumnsMessage', updateColumnsMessage);\nrpc.registerMethod('insertMessage', insertMessage);\nrpc.registerMethod('batchInsertMessageList', batchInsertMessageList);\nrpc.registerMethod('superGroupGetMessageListNoTime', superGroupGetMessageListNoTime);\nrpc.registerMethod('getMessageList', getMessageList);\nrpc.registerMethod('getMessageListNoTime', getMessageListNoTime);\nrpc.registerMethod('messageIfExists', messageIfExists);\nrpc.registerMethod('isExistsInErrChatLogBySeq', isExistsInErrChatLogBySeq);\nrpc.registerMethod('messageIfExistsBySeq', messageIfExistsBySeq);\nrpc.registerMethod('getAbnormalMsgSeq', getAbnormalMsgSeq);\nrpc.registerMethod('getAbnormalMsgSeqList', getAbnormalMsgSeqList);\nrpc.registerMethod('batchInsertExceptionMsg', batchInsertExceptionMsg);\nrpc.registerMethod('searchMessageByKeyword', searchMessageByKeyword);\nrpc.registerMethod('searchMessageByContentType', searchMessageByContentType);\nrpc.registerMethod('searchMessageByContentTypeAndKeyword', searchMessageByContentTypeAndKeyword);\nrpc.registerMethod('updateMsgSenderNickname', updateMsgSenderNickname);\nrpc.registerMethod('updateMsgSenderFaceURL', updateMsgSenderFaceURL);\nrpc.registerMethod('updateMsgSenderFaceURLAndSenderNickname', updateMsgSenderFaceURLAndSenderNickname);\nrpc.registerMethod('getMsgSeqByClientMsgID', getMsgSeqByClientMsgID);\nrpc.registerMethod('getMsgSeqListByGroupID', getMsgSeqListByGroupID);\nrpc.registerMethod('getMsgSeqListByPeerUserID', getMsgSeqListByPeerUserID);\nrpc.registerMethod('getMsgSeqListBySelfUserID', getMsgSeqListBySelfUserID);\nrpc.registerMethod('deleteAllMessage', deleteAllMessage);\nrpc.registerMethod('getAllUnDeleteMessageSeqList', getAllUnDeleteMessageSeqList);\nrpc.registerMethod('updateSingleMessageHasRead', updateSingleMessageHasRead);\nrpc.registerMethod('updateGroupMessageHasRead', updateGroupMessageHasRead);\nrpc.registerMethod('updateMessageStatusBySourceID', updateMessageStatusBySourceID);\n// conversation\nrpc.registerMethod('getAllConversationList', getAllConversationList);\nrpc.registerMethod('getAllConversationListToSync', getAllConversationListToSync);\nrpc.registerMethod('getHiddenConversationList', getHiddenConversationList);\nrpc.registerMethod('getConversation', getConversation);\nrpc.registerMethod('getMultipleConversation', getMultipleConversation);\nrpc.registerMethod('updateColumnsConversation', updateColumnsConversation);\nrpc.registerMethod('decrConversationUnreadCount', decrConversationUnreadCount);\nrpc.registerMethod('batchInsertConversationList', batchInsertConversationList);\nrpc.registerMethod('getTotalUnreadMsgCount', getTotalUnreadMsgCount);\nrpc.registerMethod('insertConversation', insertConversation);\nrpc.registerMethod('getConversationByUserID', getConversationByUserID);\nrpc.registerMethod('getConversationListSplit', getConversationListSplit);\nrpc.registerMethod('deleteConversation', deleteConversation);\nrpc.registerMethod('batchUpdateConversationList', batchUpdateConversationList);\nrpc.registerMethod('conversationIfExists', conversationIfExists);\nrpc.registerMethod('resetConversation', resetConversation);\nrpc.registerMethod('resetAllConversation', resetAllConversation);\nrpc.registerMethod('clearConversation', clearConversation);\nrpc.registerMethod('clearAllConversation', clearAllConversation);\nrpc.registerMethod('setConversationDraft', setConversationDraft);\nrpc.registerMethod('removeConversationDraft', removeConversationDraft);\nrpc.registerMethod('unPinConversation', unPinConversation);\nrpc.registerMethod('incrConversationUnreadCount', incrConversationUnreadCount);\nrpc.registerMethod('setMultipleConversationRecvMsgOpt', setMultipleConversationRecvMsgOpt);\nrpc.registerMethod('getLoginUser', getLoginUser);\nrpc.registerMethod('insertLoginUser', insertLoginUser);\nrpc.registerMethod('updateLoginUserByMap', updateLoginUserByMap);\nrpc.registerMethod('getJoinedSuperGroupList', getJoinedSuperGroupList);\nrpc.registerMethod('getJoinedSuperGroupIDList', getJoinedSuperGroupIDList);\nrpc.registerMethod('getSuperGroupInfoByGroupID', getSuperGroupInfoByGroupID);\nrpc.registerMethod('deleteSuperGroup', deleteSuperGroup);\nrpc.registerMethod('insertSuperGroup', insertSuperGroup);\nrpc.registerMethod('updateSuperGroup', updateSuperGroup);\nrpc.registerMethod('deleteConversationUnreadMessageList', deleteConversationUnreadMessageList);\nrpc.registerMethod('batchInsertConversationUnreadMessageList', batchInsertConversationUnreadMessageList);\nrpc.registerMethod('superGroupGetMessage', superGroupGetMessage);\nrpc.registerMethod('superGroupGetMultipleMessage', superGroupGetMultipleMessage);\nrpc.registerMethod('getSuperGroupNormalMsgSeq', getSuperGroupNormalMsgSeq);\nrpc.registerMethod('superGroupGetNormalMinSeq', superGroupGetNormalMinSeq);\nrpc.registerMethod('superGroupUpdateMessageTimeAndStatus', superGroupUpdateMessageTimeAndStatus);\nrpc.registerMethod('superGroupUpdateMessage', superGroupUpdateMessage);\nrpc.registerMethod('superGroupInsertMessage', superGroupInsertMessage);\nrpc.registerMethod('superGroupBatchInsertMessageList', superGroupBatchInsertMessageList);\nrpc.registerMethod('superGroupGetMessageList', superGroupGetMessageList);\nrpc.registerMethod('superGroupUpdateColumnsMessage', superGroupUpdateColumnsMessage);\nrpc.registerMethod('superGroupDeleteAllMessage', superGroupDeleteAllMessage);\nrpc.registerMethod('superGroupSearchMessageByKeyword', superGroupSearchMessageByKeyword);\nrpc.registerMethod('superGroupSearchMessageByContentTypeAndKeyword', superGroupSearchMessageByContentTypeAndKeyword);\nrpc.registerMethod('superGroupSearchMessageByContentType', superGroupSearchMessageByContentType);\nrpc.registerMethod('superGroupUpdateMessageStatusBySourceID', superGroupUpdateMessageStatusBySourceID);\nrpc.registerMethod('superGroupGetSendingMessageList', superGroupGetSendingMessageList);\nrpc.registerMethod('superGroupUpdateGroupMessageHasRead', superGroupUpdateGroupMessageHasRead);\nrpc.registerMethod('superGroupGetMsgSeqByClientMsgID', superGroupGetMsgSeqByClientMsgID);\nrpc.registerMethod('superGroupUpdateMsgSenderFaceURLAndSenderNickname', superGroupUpdateMsgSenderFaceURLAndSenderNickname);\nrpc.registerMethod('superGroupSearchAllMessageByContentType', superGroupSearchAllMessageByContentType);\n// black\nrpc.registerMethod('getBlackList', getBlackList);\nrpc.registerMethod('getBlackListUserID', getBlackListUserID);\nrpc.registerMethod('getBlackInfoByBlockUserID', getBlackInfoByBlockUserID);\nrpc.registerMethod('getBlackInfoList', getBlackInfoList);\nrpc.registerMethod('insertBlack', insertBlack);\nrpc.registerMethod('deleteBlack', deleteBlack);\nrpc.registerMethod('updateBlack', updateBlack);\n// friendRequest\nrpc.registerMethod('insertFriendRequest', insertFriendRequest);\nrpc.registerMethod('deleteFriendRequestBothUserID', deleteFriendRequestBothUserID);\nrpc.registerMethod('updateFriendRequest', updateFriendRequest);\nrpc.registerMethod('getRecvFriendApplication', getRecvFriendApplication);\nrpc.registerMethod('getSendFriendApplication', getSendFriendApplication);\nrpc.registerMethod('getFriendApplicationByBothID', getFriendApplicationByBothID);\n// groups\nrpc.registerMethod('insertGroup', insertGroup);\nrpc.registerMethod('deleteGroup', deleteGroup);\nrpc.registerMethod('updateGroup', updateGroup);\nrpc.registerMethod('getJoinedGroupList', getJoinedGroupList);\nrpc.registerMethod('getGroupInfoByGroupID', getGroupInfoByGroupID);\nrpc.registerMethod('getAllGroupInfoByGroupIDOrGroupName', getAllGroupInfoByGroupIDOrGroupName);\nrpc.registerMethod('subtractMemberCount', subtractMemberCount);\nrpc.registerMethod('addMemberCount', addMemberCount);\nrpc.registerMethod('getJoinedWorkingGroupIDList', getJoinedWorkingGroupIDList);\nrpc.registerMethod('getJoinedWorkingGroupList', getJoinedWorkingGroupList);\n// groupMembers\nrpc.registerMethod('getGroupMemberInfoByGroupIDUserID', getGroupMemberInfoByGroupIDUserID);\nrpc.registerMethod('getAllGroupMemberList', getAllGroupMemberList);\nrpc.registerMethod('getAllGroupMemberUserIDList', getAllGroupMemberUserIDList);\nrpc.registerMethod('getGroupMemberCount', getGroupMemberCount);\nrpc.registerMethod('getGroupSomeMemberInfo', getGroupSomeMemberInfo);\nrpc.registerMethod('getGroupAdminID', getGroupAdminID);\nrpc.registerMethod('getGroupMemberListByGroupID', getGroupMemberListByGroupID);\nrpc.registerMethod('getGroupMemberListSplit', getGroupMemberListSplit);\nrpc.registerMethod('getGroupMemberOwnerAndAdmin', getGroupMemberOwnerAndAdmin);\nrpc.registerMethod('getGroupMemberOwner', getGroupMemberOwner);\nrpc.registerMethod('getGroupMemberListSplitByJoinTimeFilter', getGroupMemberListSplitByJoinTimeFilter);\nrpc.registerMethod('getGroupOwnerAndAdminByGroupID', getGroupOwnerAndAdminByGroupID);\nrpc.registerMethod('getGroupMemberUIDListByGroupID', getGroupMemberUIDListByGroupID);\nrpc.registerMethod('insertGroupMember', insertGroupMember);\nrpc.registerMethod('batchInsertGroupMember', batchInsertGroupMember);\nrpc.registerMethod('deleteGroupMember', deleteGroupMember);\nrpc.registerMethod('deleteGroupAllMembers', deleteGroupAllMembers);\nrpc.registerMethod('updateGroupMember', updateGroupMember);\nrpc.registerMethod('updateGroupMemberField', updateGroupMemberField);\nrpc.registerMethod('searchGroupMembers', searchGroupMembers);\n// groupRequest\nrpc.registerMethod('insertGroupRequest', insertGroupRequest);\nrpc.registerMethod('deleteGroupRequest', deleteGroupRequest);\nrpc.registerMethod('updateGroupRequest', updateGroupRequest);\nrpc.registerMethod('getSendGroupApplication', getSendGroupApplication);\nrpc.registerMethod('insertAdminGroupRequest', insertAdminGroupRequest);\nrpc.registerMethod('deleteAdminGroupRequest', deleteAdminGroupRequest);\nrpc.registerMethod('updateAdminGroupRequest', updateAdminGroupRequest);\nrpc.registerMethod('getAdminGroupApplication', getAdminGroupApplication);\n// friend\nrpc.registerMethod('insertFriend', insertFriend);\nrpc.registerMethod('deleteFriend', deleteFriend);\nrpc.registerMethod('updateFriend', updateFriend);\nrpc.registerMethod('getAllFriendList', getAllFriendList);\nrpc.registerMethod('searchFriendList', searchFriendList);\nrpc.registerMethod('getFriendInfoByFriendUserID', getFriendInfoByFriendUserID);\nrpc.registerMethod('getFriendInfoList', getFriendInfoList);\n// temp cache chatlogs\nrpc.registerMethod('batchInsertTempCacheMessageList', batchInsertTempCacheMessageList);\nrpc.registerMethod('InsertTempCacheMessage', InsertTempCacheMessage);\nrpc.registerMethod('exec', async sql => {\n  const db = await getInstance();\n  try {\n    const result = db.exec(sql);\n    console.info(`sql debug with exec sql = ${sql.trim()} , return `, result);\n  } catch (error) {\n    console.info(`sql debug with exec sql = ${sql} , return `, error);\n  }\n});\nrpc.registerMethod('getRowsModified', async () => {\n  const db = await getInstance();\n  try {\n    const result = db.getRowsModified();\n    console.info('sql debug with getRowsModified return ', result);\n  } catch (error) {\n    console.info('sql debug with getRowsModified return ', error);\n  }\n});\nrpc.registerMethod('exportDB', async () => {\n  const db = await getInstance();\n  try {\n    const data = db.export();\n    const blob = new Blob([data]);\n    const blobHref = URL.createObjectURL(blob);\n    return blobHref;\n  } catch (error) {\n    console.info('sql export error, return ', error);\n  }\n});","map":{"version":3,"names":["RPC","RPCMessageEvent","init","close","getMessage","getMultipleMessage","getSendingMessageList","getNormalMsgSeq","updateMessageTimeAndStatus","updateMessage","updateColumnsMessage","insertMessage","batchInsertMessageList","getMessageList","getMessageListNoTime","messageIfExists","isExistsInErrChatLogBySeq","messageIfExistsBySeq","getAbnormalMsgSeq","getAbnormalMsgSeqList","batchInsertExceptionMsg","searchMessageByKeyword","searchMessageByContentType","searchMessageByContentTypeAndKeyword","updateMsgSenderNickname","updateMsgSenderFaceURL","updateMsgSenderFaceURLAndSenderNickname","getMsgSeqByClientMsgID","getMsgSeqListByGroupID","getMsgSeqListByPeerUserID","getMsgSeqListBySelfUserID","deleteAllMessage","getAllUnDeleteMessageSeqList","updateSingleMessageHasRead","updateGroupMessageHasRead","updateMessageStatusBySourceID","getAllConversationList","getAllConversationListToSync","getHiddenConversationList","getConversation","getMultipleConversation","updateColumnsConversation","decrConversationUnreadCount","batchInsertConversationList","insertConversation","getTotalUnreadMsgCount","batchUpdateConversationList","clearAllConversation","clearConversation","conversationIfExists","deleteConversation","getConversationByUserID","getConversationListSplit","incrConversationUnreadCount","removeConversationDraft","resetAllConversation","resetConversation","setConversationDraft","setMultipleConversationRecvMsgOpt","unPinConversation","getLoginUser","insertLoginUser","updateLoginUserByMap","getJoinedSuperGroupList","getJoinedSuperGroupIDList","getSuperGroupInfoByGroupID","deleteSuperGroup","insertSuperGroup","updateSuperGroup","deleteConversationUnreadMessageList","batchInsertConversationUnreadMessageList","superGroupGetMessage","superGroupGetMultipleMessage","getSuperGroupNormalMsgSeq","superGroupGetNormalMinSeq","superGroupUpdateMessageTimeAndStatus","superGroupUpdateMessage","superGroupInsertMessage","superGroupBatchInsertMessageList","superGroupGetMessageListNoTime","superGroupGetMessageList","superGroupDeleteAllMessage","superGroupGetMsgSeqByClientMsgID","superGroupGetSendingMessageList","superGroupSearchMessageByContentType","superGroupSearchMessageByKeyword","superGroupSearchMessageByContentTypeAndKeyword","superGroupUpdateGroupMessageHasRead","superGroupUpdateMessageStatusBySourceID","superGroupUpdateColumnsMessage","superGroupUpdateMsgSenderFaceURLAndSenderNickname","superGroupSearchAllMessageByContentType","getBlackList","getBlackListUserID","getBlackInfoByBlockUserID","getBlackInfoList","insertBlack","deleteBlack","updateBlack","insertFriendRequest","deleteFriendRequestBothUserID","updateFriendRequest","getRecvFriendApplication","getSendFriendApplication","getFriendApplicationByBothID","insertGroup","deleteGroup","updateGroup","getJoinedGroupList","getGroupInfoByGroupID","getAllGroupInfoByGroupIDOrGroupName","subtractMemberCount","addMemberCount","getJoinedWorkingGroupIDList","getJoinedWorkingGroupList","insertGroupRequest","deleteGroupRequest","updateGroupRequest","getSendGroupApplication","insertAdminGroupRequest","deleteAdminGroupRequest","updateAdminGroupRequest","getAdminGroupApplication","insertFriend","deleteFriend","updateFriend","getAllFriendList","searchFriendList","getFriendInfoList","getFriendInfoByFriendUserID","batchInsertGroupMember","deleteGroupAllMembers","deleteGroupMember","getAllGroupMemberList","getAllGroupMemberUserIDList","getGroupAdminID","getGroupMemberCount","getGroupMemberInfoByGroupIDUserID","getGroupMemberListByGroupID","getGroupMemberListSplit","getGroupMemberListSplitByJoinTimeFilter","getGroupMemberOwner","getGroupMemberOwnerAndAdmin","getGroupMemberUIDListByGroupID","getGroupOwnerAndAdminByGroupID","getGroupSomeMemberInfo","insertGroupMember","searchGroupMembers","updateGroupMember","updateGroupMemberField","batchInsertTempCacheMessageList","InsertTempCacheMessage","getInstance","ctx","self","rpc","event","currentEndpoint","targetEndpoint","registerMethod","sql","db","result","exec","console","info","trim","error","getRowsModified","data","export","blob","Blob","blobHref","URL","createObjectURL"],"sources":["C:/ysx/xm/mark/web/node_modules/open-im-sdk-wasm/lib/api/worker.js"],"sourcesContent":["import { RPC, RPCMessageEvent } from 'rpc-shooter';\nimport { init, close, \n// message\ngetMessage, getMultipleMessage, getSendingMessageList, getNormalMsgSeq, updateMessageTimeAndStatus, updateMessage, updateColumnsMessage, insertMessage, batchInsertMessageList, getMessageList, getMessageListNoTime, messageIfExists, isExistsInErrChatLogBySeq, messageIfExistsBySeq, getAbnormalMsgSeq, getAbnormalMsgSeqList, batchInsertExceptionMsg, searchMessageByKeyword, searchMessageByContentType, searchMessageByContentTypeAndKeyword, updateMsgSenderNickname, updateMsgSenderFaceURL, updateMsgSenderFaceURLAndSenderNickname, getMsgSeqByClientMsgID, getMsgSeqListByGroupID, getMsgSeqListByPeerUserID, getMsgSeqListBySelfUserID, deleteAllMessage, getAllUnDeleteMessageSeqList, updateSingleMessageHasRead, updateGroupMessageHasRead, updateMessageStatusBySourceID, \n// conversation\ngetAllConversationList, getAllConversationListToSync, getHiddenConversationList, getConversation, getMultipleConversation, updateColumnsConversation, decrConversationUnreadCount, batchInsertConversationList, insertConversation, getTotalUnreadMsgCount, batchUpdateConversationList, clearAllConversation, clearConversation, conversationIfExists, deleteConversation, getConversationByUserID, getConversationListSplit, incrConversationUnreadCount, removeConversationDraft, resetAllConversation, resetConversation, setConversationDraft, setMultipleConversationRecvMsgOpt, unPinConversation, \n// users\ngetLoginUser, insertLoginUser, updateLoginUserByMap, \n// super group\ngetJoinedSuperGroupList, getJoinedSuperGroupIDList, getSuperGroupInfoByGroupID, deleteSuperGroup, insertSuperGroup, updateSuperGroup, \n// unread messages\ndeleteConversationUnreadMessageList, batchInsertConversationUnreadMessageList, \n// super group messages\nsuperGroupGetMessage, superGroupGetMultipleMessage, getSuperGroupNormalMsgSeq, superGroupGetNormalMinSeq, superGroupUpdateMessageTimeAndStatus, superGroupUpdateMessage, superGroupInsertMessage, superGroupBatchInsertMessageList, superGroupGetMessageListNoTime, superGroupGetMessageList, superGroupDeleteAllMessage, superGroupGetMsgSeqByClientMsgID, superGroupGetSendingMessageList, superGroupSearchMessageByContentType, superGroupSearchMessageByKeyword, superGroupSearchMessageByContentTypeAndKeyword, superGroupUpdateGroupMessageHasRead, superGroupUpdateMessageStatusBySourceID, superGroupUpdateColumnsMessage, superGroupUpdateMsgSenderFaceURLAndSenderNickname, superGroupSearchAllMessageByContentType, \n// black\ngetBlackList, getBlackListUserID, getBlackInfoByBlockUserID, getBlackInfoList, insertBlack, deleteBlack, updateBlack, \n// friendRequest\ninsertFriendRequest, deleteFriendRequestBothUserID, updateFriendRequest, getRecvFriendApplication, getSendFriendApplication, getFriendApplicationByBothID, \n// groups\ninsertGroup, deleteGroup, updateGroup, getJoinedGroupList, getGroupInfoByGroupID, getAllGroupInfoByGroupIDOrGroupName, subtractMemberCount, addMemberCount, getJoinedWorkingGroupIDList, getJoinedWorkingGroupList, \n// groupRequest\ninsertGroupRequest, deleteGroupRequest, updateGroupRequest, getSendGroupApplication, insertAdminGroupRequest, deleteAdminGroupRequest, updateAdminGroupRequest, getAdminGroupApplication, \n// friend\ninsertFriend, deleteFriend, updateFriend, getAllFriendList, searchFriendList, getFriendInfoList, getFriendInfoByFriendUserID, \n// groupMember\nbatchInsertGroupMember, deleteGroupAllMembers, deleteGroupMember, getAllGroupMemberList, getAllGroupMemberUserIDList, getGroupAdminID, getGroupMemberCount, getGroupMemberInfoByGroupIDUserID, getGroupMemberListByGroupID, getGroupMemberListSplit, getGroupMemberListSplitByJoinTimeFilter, getGroupMemberOwner, getGroupMemberOwnerAndAdmin, getGroupMemberUIDListByGroupID, getGroupOwnerAndAdminByGroupID, getGroupSomeMemberInfo, insertGroupMember, searchGroupMembers, updateGroupMember, updateGroupMemberField, \n// temp cache chatlogs\nbatchInsertTempCacheMessageList, InsertTempCacheMessage, } from '../api/database';\nimport { getInstance } from './database/instance';\nconst ctx = self;\nconst rpc = new RPC({\n    event: new RPCMessageEvent({\n        currentEndpoint: ctx,\n        targetEndpoint: ctx,\n    }),\n});\nrpc.registerMethod('initDB', init);\nrpc.registerMethod('close', close);\n// message\nrpc.registerMethod('getMessage', getMessage);\nrpc.registerMethod('getMultipleMessage', getMultipleMessage);\nrpc.registerMethod('getSendingMessageList', getSendingMessageList);\nrpc.registerMethod('getNormalMsgSeq', getNormalMsgSeq);\nrpc.registerMethod('updateMessageTimeAndStatus', updateMessageTimeAndStatus);\nrpc.registerMethod('updateMessage', updateMessage);\nrpc.registerMethod('updateColumnsMessage', updateColumnsMessage);\nrpc.registerMethod('insertMessage', insertMessage);\nrpc.registerMethod('batchInsertMessageList', batchInsertMessageList);\nrpc.registerMethod('superGroupGetMessageListNoTime', superGroupGetMessageListNoTime);\nrpc.registerMethod('getMessageList', getMessageList);\nrpc.registerMethod('getMessageListNoTime', getMessageListNoTime);\nrpc.registerMethod('messageIfExists', messageIfExists);\nrpc.registerMethod('isExistsInErrChatLogBySeq', isExistsInErrChatLogBySeq);\nrpc.registerMethod('messageIfExistsBySeq', messageIfExistsBySeq);\nrpc.registerMethod('getAbnormalMsgSeq', getAbnormalMsgSeq);\nrpc.registerMethod('getAbnormalMsgSeqList', getAbnormalMsgSeqList);\nrpc.registerMethod('batchInsertExceptionMsg', batchInsertExceptionMsg);\nrpc.registerMethod('searchMessageByKeyword', searchMessageByKeyword);\nrpc.registerMethod('searchMessageByContentType', searchMessageByContentType);\nrpc.registerMethod('searchMessageByContentTypeAndKeyword', searchMessageByContentTypeAndKeyword);\nrpc.registerMethod('updateMsgSenderNickname', updateMsgSenderNickname);\nrpc.registerMethod('updateMsgSenderFaceURL', updateMsgSenderFaceURL);\nrpc.registerMethod('updateMsgSenderFaceURLAndSenderNickname', updateMsgSenderFaceURLAndSenderNickname);\nrpc.registerMethod('getMsgSeqByClientMsgID', getMsgSeqByClientMsgID);\nrpc.registerMethod('getMsgSeqListByGroupID', getMsgSeqListByGroupID);\nrpc.registerMethod('getMsgSeqListByPeerUserID', getMsgSeqListByPeerUserID);\nrpc.registerMethod('getMsgSeqListBySelfUserID', getMsgSeqListBySelfUserID);\nrpc.registerMethod('deleteAllMessage', deleteAllMessage);\nrpc.registerMethod('getAllUnDeleteMessageSeqList', getAllUnDeleteMessageSeqList);\nrpc.registerMethod('updateSingleMessageHasRead', updateSingleMessageHasRead);\nrpc.registerMethod('updateGroupMessageHasRead', updateGroupMessageHasRead);\nrpc.registerMethod('updateMessageStatusBySourceID', updateMessageStatusBySourceID);\n// conversation\nrpc.registerMethod('getAllConversationList', getAllConversationList);\nrpc.registerMethod('getAllConversationListToSync', getAllConversationListToSync);\nrpc.registerMethod('getHiddenConversationList', getHiddenConversationList);\nrpc.registerMethod('getConversation', getConversation);\nrpc.registerMethod('getMultipleConversation', getMultipleConversation);\nrpc.registerMethod('updateColumnsConversation', updateColumnsConversation);\nrpc.registerMethod('decrConversationUnreadCount', decrConversationUnreadCount);\nrpc.registerMethod('batchInsertConversationList', batchInsertConversationList);\nrpc.registerMethod('getTotalUnreadMsgCount', getTotalUnreadMsgCount);\nrpc.registerMethod('insertConversation', insertConversation);\nrpc.registerMethod('getConversationByUserID', getConversationByUserID);\nrpc.registerMethod('getConversationListSplit', getConversationListSplit);\nrpc.registerMethod('deleteConversation', deleteConversation);\nrpc.registerMethod('batchUpdateConversationList', batchUpdateConversationList);\nrpc.registerMethod('conversationIfExists', conversationIfExists);\nrpc.registerMethod('resetConversation', resetConversation);\nrpc.registerMethod('resetAllConversation', resetAllConversation);\nrpc.registerMethod('clearConversation', clearConversation);\nrpc.registerMethod('clearAllConversation', clearAllConversation);\nrpc.registerMethod('setConversationDraft', setConversationDraft);\nrpc.registerMethod('removeConversationDraft', removeConversationDraft);\nrpc.registerMethod('unPinConversation', unPinConversation);\nrpc.registerMethod('incrConversationUnreadCount', incrConversationUnreadCount);\nrpc.registerMethod('setMultipleConversationRecvMsgOpt', setMultipleConversationRecvMsgOpt);\nrpc.registerMethod('getLoginUser', getLoginUser);\nrpc.registerMethod('insertLoginUser', insertLoginUser);\nrpc.registerMethod('updateLoginUserByMap', updateLoginUserByMap);\nrpc.registerMethod('getJoinedSuperGroupList', getJoinedSuperGroupList);\nrpc.registerMethod('getJoinedSuperGroupIDList', getJoinedSuperGroupIDList);\nrpc.registerMethod('getSuperGroupInfoByGroupID', getSuperGroupInfoByGroupID);\nrpc.registerMethod('deleteSuperGroup', deleteSuperGroup);\nrpc.registerMethod('insertSuperGroup', insertSuperGroup);\nrpc.registerMethod('updateSuperGroup', updateSuperGroup);\nrpc.registerMethod('deleteConversationUnreadMessageList', deleteConversationUnreadMessageList);\nrpc.registerMethod('batchInsertConversationUnreadMessageList', batchInsertConversationUnreadMessageList);\nrpc.registerMethod('superGroupGetMessage', superGroupGetMessage);\nrpc.registerMethod('superGroupGetMultipleMessage', superGroupGetMultipleMessage);\nrpc.registerMethod('getSuperGroupNormalMsgSeq', getSuperGroupNormalMsgSeq);\nrpc.registerMethod('superGroupGetNormalMinSeq', superGroupGetNormalMinSeq);\nrpc.registerMethod('superGroupUpdateMessageTimeAndStatus', superGroupUpdateMessageTimeAndStatus);\nrpc.registerMethod('superGroupUpdateMessage', superGroupUpdateMessage);\nrpc.registerMethod('superGroupInsertMessage', superGroupInsertMessage);\nrpc.registerMethod('superGroupBatchInsertMessageList', superGroupBatchInsertMessageList);\nrpc.registerMethod('superGroupGetMessageList', superGroupGetMessageList);\nrpc.registerMethod('superGroupUpdateColumnsMessage', superGroupUpdateColumnsMessage);\nrpc.registerMethod('superGroupDeleteAllMessage', superGroupDeleteAllMessage);\nrpc.registerMethod('superGroupSearchMessageByKeyword', superGroupSearchMessageByKeyword);\nrpc.registerMethod('superGroupSearchMessageByContentTypeAndKeyword', superGroupSearchMessageByContentTypeAndKeyword);\nrpc.registerMethod('superGroupSearchMessageByContentType', superGroupSearchMessageByContentType);\nrpc.registerMethod('superGroupUpdateMessageStatusBySourceID', superGroupUpdateMessageStatusBySourceID);\nrpc.registerMethod('superGroupGetSendingMessageList', superGroupGetSendingMessageList);\nrpc.registerMethod('superGroupUpdateGroupMessageHasRead', superGroupUpdateGroupMessageHasRead);\nrpc.registerMethod('superGroupGetMsgSeqByClientMsgID', superGroupGetMsgSeqByClientMsgID);\nrpc.registerMethod('superGroupUpdateMsgSenderFaceURLAndSenderNickname', superGroupUpdateMsgSenderFaceURLAndSenderNickname);\nrpc.registerMethod('superGroupSearchAllMessageByContentType', superGroupSearchAllMessageByContentType);\n// black\nrpc.registerMethod('getBlackList', getBlackList);\nrpc.registerMethod('getBlackListUserID', getBlackListUserID);\nrpc.registerMethod('getBlackInfoByBlockUserID', getBlackInfoByBlockUserID);\nrpc.registerMethod('getBlackInfoList', getBlackInfoList);\nrpc.registerMethod('insertBlack', insertBlack);\nrpc.registerMethod('deleteBlack', deleteBlack);\nrpc.registerMethod('updateBlack', updateBlack);\n// friendRequest\nrpc.registerMethod('insertFriendRequest', insertFriendRequest);\nrpc.registerMethod('deleteFriendRequestBothUserID', deleteFriendRequestBothUserID);\nrpc.registerMethod('updateFriendRequest', updateFriendRequest);\nrpc.registerMethod('getRecvFriendApplication', getRecvFriendApplication);\nrpc.registerMethod('getSendFriendApplication', getSendFriendApplication);\nrpc.registerMethod('getFriendApplicationByBothID', getFriendApplicationByBothID);\n// groups\nrpc.registerMethod('insertGroup', insertGroup);\nrpc.registerMethod('deleteGroup', deleteGroup);\nrpc.registerMethod('updateGroup', updateGroup);\nrpc.registerMethod('getJoinedGroupList', getJoinedGroupList);\nrpc.registerMethod('getGroupInfoByGroupID', getGroupInfoByGroupID);\nrpc.registerMethod('getAllGroupInfoByGroupIDOrGroupName', getAllGroupInfoByGroupIDOrGroupName);\nrpc.registerMethod('subtractMemberCount', subtractMemberCount);\nrpc.registerMethod('addMemberCount', addMemberCount);\nrpc.registerMethod('getJoinedWorkingGroupIDList', getJoinedWorkingGroupIDList);\nrpc.registerMethod('getJoinedWorkingGroupList', getJoinedWorkingGroupList);\n// groupMembers\nrpc.registerMethod('getGroupMemberInfoByGroupIDUserID', getGroupMemberInfoByGroupIDUserID);\nrpc.registerMethod('getAllGroupMemberList', getAllGroupMemberList);\nrpc.registerMethod('getAllGroupMemberUserIDList', getAllGroupMemberUserIDList);\nrpc.registerMethod('getGroupMemberCount', getGroupMemberCount);\nrpc.registerMethod('getGroupSomeMemberInfo', getGroupSomeMemberInfo);\nrpc.registerMethod('getGroupAdminID', getGroupAdminID);\nrpc.registerMethod('getGroupMemberListByGroupID', getGroupMemberListByGroupID);\nrpc.registerMethod('getGroupMemberListSplit', getGroupMemberListSplit);\nrpc.registerMethod('getGroupMemberOwnerAndAdmin', getGroupMemberOwnerAndAdmin);\nrpc.registerMethod('getGroupMemberOwner', getGroupMemberOwner);\nrpc.registerMethod('getGroupMemberListSplitByJoinTimeFilter', getGroupMemberListSplitByJoinTimeFilter);\nrpc.registerMethod('getGroupOwnerAndAdminByGroupID', getGroupOwnerAndAdminByGroupID);\nrpc.registerMethod('getGroupMemberUIDListByGroupID', getGroupMemberUIDListByGroupID);\nrpc.registerMethod('insertGroupMember', insertGroupMember);\nrpc.registerMethod('batchInsertGroupMember', batchInsertGroupMember);\nrpc.registerMethod('deleteGroupMember', deleteGroupMember);\nrpc.registerMethod('deleteGroupAllMembers', deleteGroupAllMembers);\nrpc.registerMethod('updateGroupMember', updateGroupMember);\nrpc.registerMethod('updateGroupMemberField', updateGroupMemberField);\nrpc.registerMethod('searchGroupMembers', searchGroupMembers);\n// groupRequest\nrpc.registerMethod('insertGroupRequest', insertGroupRequest);\nrpc.registerMethod('deleteGroupRequest', deleteGroupRequest);\nrpc.registerMethod('updateGroupRequest', updateGroupRequest);\nrpc.registerMethod('getSendGroupApplication', getSendGroupApplication);\nrpc.registerMethod('insertAdminGroupRequest', insertAdminGroupRequest);\nrpc.registerMethod('deleteAdminGroupRequest', deleteAdminGroupRequest);\nrpc.registerMethod('updateAdminGroupRequest', updateAdminGroupRequest);\nrpc.registerMethod('getAdminGroupApplication', getAdminGroupApplication);\n// friend\nrpc.registerMethod('insertFriend', insertFriend);\nrpc.registerMethod('deleteFriend', deleteFriend);\nrpc.registerMethod('updateFriend', updateFriend);\nrpc.registerMethod('getAllFriendList', getAllFriendList);\nrpc.registerMethod('searchFriendList', searchFriendList);\nrpc.registerMethod('getFriendInfoByFriendUserID', getFriendInfoByFriendUserID);\nrpc.registerMethod('getFriendInfoList', getFriendInfoList);\n// temp cache chatlogs\nrpc.registerMethod('batchInsertTempCacheMessageList', batchInsertTempCacheMessageList);\nrpc.registerMethod('InsertTempCacheMessage', InsertTempCacheMessage);\nrpc.registerMethod('exec', async (sql) => {\n    const db = await getInstance();\n    try {\n        const result = db.exec(sql);\n        console.info(`sql debug with exec sql = ${sql.trim()} , return `, result);\n    }\n    catch (error) {\n        console.info(`sql debug with exec sql = ${sql} , return `, error);\n    }\n});\nrpc.registerMethod('getRowsModified', async () => {\n    const db = await getInstance();\n    try {\n        const result = db.getRowsModified();\n        console.info('sql debug with getRowsModified return ', result);\n    }\n    catch (error) {\n        console.info('sql debug with getRowsModified return ', error);\n    }\n});\nrpc.registerMethod('exportDB', async () => {\n    const db = await getInstance();\n    try {\n        const data = db.export();\n        const blob = new Blob([data]);\n        const blobHref = URL.createObjectURL(blob);\n        return blobHref;\n    }\n    catch (error) {\n        console.info('sql export error, return ', error);\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}