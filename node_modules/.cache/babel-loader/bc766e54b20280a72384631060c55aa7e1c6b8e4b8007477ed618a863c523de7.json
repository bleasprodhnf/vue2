{"ast":null,"code":"import { initBackend } from 'absurd-sql-optimized/dist/indexeddb-main-thread';\nimport { RPCMessageEvent, RPC } from 'rpc-shooter';\nimport { DatabaseErrorCode } from '../constant';\n// @ts-ignore\n//  for vite\n// import IMWorker from './worker?worker';\n//  @ts-ignore\n//  for webpack4\nimport IMWorker from 'worker-loader!./worker.js';\nlet rpc;\nlet worker;\nfunction initWorker() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  // for webpack4 or vite\n  worker = new IMWorker();\n  // for webpack5\n  //  worker = new Worker(new URL('./worker.js', import.meta.url));\n  // This is only required because Safari doesn't support nested\n  // workers. This installs a handler that will proxy creating web\n  // workers through the main thread\n  initBackend(worker);\n  rpc = new RPC({\n    event: new RPCMessageEvent({\n      currentEndpoint: worker,\n      targetEndpoint: worker\n    })\n  });\n}\nfunction resetWorker() {\n  if (rpc) {\n    rpc.destroy();\n    rpc = undefined;\n  }\n  if (worker) {\n    worker.terminate();\n    worker = undefined;\n  }\n}\ninitWorker();\nfunction catchErrorHandle(error) {\n  // defined in rpc-shooter\n  if (error.code === -32300) {\n    resetWorker();\n    return JSON.stringify({\n      data: '',\n      errCode: DatabaseErrorCode.ErrorDBTimeout,\n      errMsg: 'database maybe damaged'\n    });\n  }\n  throw error;\n}\nfunction registeMethodOnWindow(name, realName) {\n  console.info(`=> (database api) registe ${realName ?? name}`);\n  return async (...args) => {\n    if (!rpc || !worker) {\n      initWorker();\n    }\n    if (!rpc) {\n      return;\n    }\n    try {\n      // console.info(\n      //   `=> (invoked by go wasm) run ${\n      //     realName ?? name\n      //   } method with args ${JSON.stringify(args)}`\n      // );\n      const response = await rpc.invoke(name, ...args, {\n        timeout: 5000000\n      });\n      // console.info(\n      //   `=> (invoked by go wasm) run ${realName ?? name} method with response `,\n      //   JSON.stringify(response)\n      // );\n      return JSON.stringify(response);\n    } catch (error) {\n      // defined in rpc-shooter\n      catchErrorHandle(error);\n    }\n  };\n}\n// register method on window for go wasm invoke\nexport function initDatabaseAPI() {\n  if (!rpc) {\n    return;\n  }\n  window.initDB = registeMethodOnWindow('initDB');\n  window.close = registeMethodOnWindow('close');\n  // message\n  window.getMessage = registeMethodOnWindow('getMessage');\n  window.getMultipleMessage = registeMethodOnWindow('getMultipleMessage');\n  window.getSendingMessageList = registeMethodOnWindow('getSendingMessageList');\n  window.getNormalMsgSeq = registeMethodOnWindow('getNormalMsgSeq');\n  window.updateMessageTimeAndStatus = registeMethodOnWindow('updateMessageTimeAndStatus');\n  window.updateMessage = registeMethodOnWindow('updateMessage');\n  window.updateColumnsMessage = registeMethodOnWindow('updateColumnsMessage');\n  window.insertMessage = registeMethodOnWindow('insertMessage');\n  window.batchInsertMessageList = registeMethodOnWindow('batchInsertMessageList');\n  window.getMessageList = registeMethodOnWindow('getMessageList');\n  window.getMessageListNoTime = registeMethodOnWindow('getMessageListNoTime');\n  window.messageIfExists = registeMethodOnWindow('messageIfExists');\n  window.isExistsInErrChatLogBySeq = registeMethodOnWindow('isExistsInErrChatLogBySeq');\n  window.messageIfExistsBySeq = registeMethodOnWindow('messageIfExistsBySeq');\n  window.getAbnormalMsgSeq = registeMethodOnWindow('getAbnormalMsgSeq');\n  window.getAbnormalMsgSeqList = registeMethodOnWindow('getAbnormalMsgSeqList');\n  window.batchInsertExceptionMsg = registeMethodOnWindow('batchInsertExceptionMsg');\n  window.searchMessageByKeyword = registeMethodOnWindow('searchMessageByKeyword');\n  window.searchMessageByContentType = registeMethodOnWindow('searchMessageByContentType');\n  window.searchMessageByContentTypeAndKeyword = registeMethodOnWindow('searchMessageByContentTypeAndKeyword');\n  window.updateMsgSenderNickname = registeMethodOnWindow('updateMsgSenderNickname');\n  window.updateMsgSenderFaceURL = registeMethodOnWindow('updateMsgSenderFaceURL');\n  window.updateMsgSenderFaceURLAndSenderNickname = registeMethodOnWindow('updateMsgSenderFaceURLAndSenderNickname');\n  window.getMsgSeqByClientMsgID = registeMethodOnWindow('getMsgSeqByClientMsgID');\n  window.getMsgSeqListByGroupID = registeMethodOnWindow('getMsgSeqListByGroupID');\n  window.getMsgSeqListByPeerUserID = registeMethodOnWindow('getMsgSeqListByPeerUserID');\n  window.getMsgSeqListBySelfUserID = registeMethodOnWindow('getMsgSeqListBySelfUserID');\n  window.deleteAllMessage = registeMethodOnWindow('deleteAllMessage');\n  window.getAllUnDeleteMessageSeqList = registeMethodOnWindow('getAllUnDeleteMessageSeqList');\n  window.updateSingleMessageHasRead = registeMethodOnWindow('updateSingleMessageHasRead');\n  window.updateGroupMessageHasRead = registeMethodOnWindow('updateGroupMessageHasRead');\n  window.updateMessageStatusBySourceID = registeMethodOnWindow('updateMessageStatusBySourceID');\n  // conversation\n  window.getAllConversationListDB = registeMethodOnWindow('getAllConversationList');\n  window.getAllConversationListToSync = registeMethodOnWindow('getAllConversationListToSync');\n  window.getHiddenConversationList = registeMethodOnWindow('getHiddenConversationList');\n  window.getConversation = registeMethodOnWindow('getConversation');\n  window.getMultipleConversationDB = registeMethodOnWindow('getMultipleConversation');\n  window.updateColumnsConversation = registeMethodOnWindow('updateColumnsConversation');\n  window.updateConversation = registeMethodOnWindow('updateColumnsConversation', 'updateConversation');\n  window.updateConversationForSync = registeMethodOnWindow('updateColumnsConversation', 'updateConversationForSync');\n  window.decrConversationUnreadCount = registeMethodOnWindow('decrConversationUnreadCount');\n  window.batchInsertConversationList = registeMethodOnWindow('batchInsertConversationList');\n  window.insertConversation = registeMethodOnWindow('insertConversation');\n  window.getTotalUnreadMsgCountDB = registeMethodOnWindow('getTotalUnreadMsgCount');\n  window.getConversationByUserID = registeMethodOnWindow('getConversationByUserID');\n  window.getConversationListSplitDB = registeMethodOnWindow('getConversationListSplit');\n  window.deleteConversation = registeMethodOnWindow('deleteConversation');\n  window.batchUpdateConversationList = registeMethodOnWindow('batchUpdateConversationList');\n  window.conversationIfExists = registeMethodOnWindow('conversationIfExists');\n  window.resetConversation = registeMethodOnWindow('resetConversation');\n  window.resetAllConversation = registeMethodOnWindow('resetAllConversation');\n  window.clearConversation = registeMethodOnWindow('clearConversation');\n  window.clearAllConversation = registeMethodOnWindow('clearAllConversation');\n  window.setConversationDraftDB = registeMethodOnWindow('setConversationDraft');\n  window.removeConversationDraft = registeMethodOnWindow('removeConversationDraft');\n  window.unPinConversation = registeMethodOnWindow('unPinConversation');\n  // window.updateAllConversation = registeMethodOnWindow('updateAllConversation');\n  window.incrConversationUnreadCount = registeMethodOnWindow('incrConversationUnreadCount');\n  window.setMultipleConversationRecvMsgOpt = registeMethodOnWindow('setMultipleConversationRecvMsgOpt');\n  // users\n  window.getLoginUser = registeMethodOnWindow('getLoginUser');\n  window.insertLoginUser = registeMethodOnWindow('insertLoginUser');\n  window.updateLoginUserByMap = registeMethodOnWindow('updateLoginUserByMap');\n  // super groups\n  window.getJoinedSuperGroupList = registeMethodOnWindow('getJoinedSuperGroupList');\n  window.getJoinedSuperGroupIDList = registeMethodOnWindow('getJoinedSuperGroupIDList');\n  window.getSuperGroupInfoByGroupID = registeMethodOnWindow('getSuperGroupInfoByGroupID');\n  window.deleteSuperGroup = registeMethodOnWindow('deleteSuperGroup');\n  window.insertSuperGroup = registeMethodOnWindow('insertSuperGroup');\n  window.updateSuperGroup = registeMethodOnWindow('updateSuperGroup');\n  // unread messages\n  window.deleteConversationUnreadMessageList = registeMethodOnWindow('deleteConversationUnreadMessageList');\n  window.batchInsertConversationUnreadMessageList = registeMethodOnWindow('batchInsertConversationUnreadMessageList');\n  // super group messages\n  window.superGroupGetMessage = registeMethodOnWindow('superGroupGetMessage');\n  window.superGroupGetMultipleMessage = registeMethodOnWindow('superGroupGetMultipleMessage');\n  window.superGroupGetNormalMinSeq = registeMethodOnWindow('superGroupGetNormalMinSeq');\n  window.getSuperGroupNormalMsgSeq = registeMethodOnWindow('getSuperGroupNormalMsgSeq');\n  window.superGroupUpdateMessageTimeAndStatus = registeMethodOnWindow('superGroupUpdateMessageTimeAndStatus');\n  window.superGroupUpdateMessage = registeMethodOnWindow('superGroupUpdateMessage');\n  window.superGroupInsertMessage = registeMethodOnWindow('superGroupInsertMessage');\n  window.superGroupBatchInsertMessageList = registeMethodOnWindow('superGroupBatchInsertMessageList');\n  window.superGroupGetMessageListNoTime = registeMethodOnWindow('superGroupGetMessageListNoTime');\n  window.superGroupGetMessageList = registeMethodOnWindow('superGroupGetMessageList');\n  window.superGroupUpdateColumnsMessage = registeMethodOnWindow('superGroupUpdateColumnsMessage');\n  window.superGroupDeleteAllMessage = registeMethodOnWindow('superGroupDeleteAllMessage');\n  window.superGroupSearchMessageByKeyword = registeMethodOnWindow('superGroupSearchMessageByKeyword');\n  window.superGroupSearchMessageByContentType = registeMethodOnWindow('superGroupSearchMessageByContentType');\n  window.superGroupSearchMessageByContentTypeAndKeyword = registeMethodOnWindow('superGroupSearchMessageByContentTypeAndKeyword');\n  window.superGroupUpdateMessageStatusBySourceID = registeMethodOnWindow('superGroupUpdateMessageStatusBySourceID');\n  window.superGroupGetSendingMessageList = registeMethodOnWindow('superGroupGetSendingMessageList');\n  window.superGroupUpdateGroupMessageHasRead = registeMethodOnWindow('superGroupUpdateGroupMessageHasRead');\n  window.superGroupGetMsgSeqByClientMsgID = registeMethodOnWindow('superGroupGetMsgSeqByClientMsgID');\n  window.superGroupUpdateMsgSenderFaceURLAndSenderNickname = registeMethodOnWindow('superGroupUpdateMsgSenderFaceURLAndSenderNickname');\n  window.superGroupSearchAllMessageByContentType = registeMethodOnWindow('superGroupSearchAllMessageByContentType');\n  // debug\n  window.exec = registeMethodOnWindow('exec');\n  window.getRowsModified = registeMethodOnWindow('getRowsModified');\n  window.exportDB = async () => {\n    if (!rpc || !worker) {\n      initWorker();\n    }\n    if (!rpc) {\n      return;\n    }\n    try {\n      console.info('=> (invoked by go wasm) run exportDB method ');\n      const result = await rpc.invoke('exportDB', undefined, {\n        timeout: 5000\n      });\n      console.info('=> (invoked by go wasm) run exportDB method with response ', JSON.stringify(result));\n      return result;\n    } catch (error) {\n      catchErrorHandle(error);\n    }\n  };\n  // black\n  window.getBlackListDB = registeMethodOnWindow('getBlackList');\n  window.getBlackListUserID = registeMethodOnWindow('getBlackListUserID');\n  window.getBlackInfoByBlockUserID = registeMethodOnWindow('getBlackInfoByBlockUserID');\n  window.getBlackInfoList = registeMethodOnWindow('getBlackInfoList');\n  window.insertBlack = registeMethodOnWindow('insertBlack');\n  window.deleteBlack = registeMethodOnWindow('deleteBlack');\n  window.updateBlack = registeMethodOnWindow('updateBlack');\n  // friendRequest\n  window.insertFriendRequest = registeMethodOnWindow('insertFriendRequest');\n  window.deleteFriendRequestBothUserID = registeMethodOnWindow('deleteFriendRequestBothUserID');\n  window.updateFriendRequest = registeMethodOnWindow('updateFriendRequest');\n  window.getRecvFriendApplication = registeMethodOnWindow('getRecvFriendApplication');\n  window.getSendFriendApplication = registeMethodOnWindow('getSendFriendApplication');\n  window.getFriendApplicationByBothID = registeMethodOnWindow('getFriendApplicationByBothID');\n  // friend\n  window.insertFriend = registeMethodOnWindow('insertFriend');\n  window.deleteFriendDB = registeMethodOnWindow('deleteFriend');\n  window.updateFriend = registeMethodOnWindow('updateFriend');\n  window.getAllFriendList = registeMethodOnWindow('getAllFriendList');\n  window.searchFriendList = registeMethodOnWindow('searchFriendList');\n  window.getFriendInfoByFriendUserID = registeMethodOnWindow('getFriendInfoByFriendUserID');\n  window.getFriendInfoList = registeMethodOnWindow('getFriendInfoList');\n  // groups\n  window.insertGroup = registeMethodOnWindow('insertGroup');\n  window.deleteGroup = registeMethodOnWindow('deleteGroup');\n  window.updateGroup = registeMethodOnWindow('updateGroup');\n  window.getJoinedGroupListDB = registeMethodOnWindow('getJoinedGroupList');\n  window.getGroupInfoByGroupID = registeMethodOnWindow('getGroupInfoByGroupID');\n  window.getAllGroupInfoByGroupIDOrGroupName = registeMethodOnWindow('getAllGroupInfoByGroupIDOrGroupName');\n  window.subtractMemberCount = registeMethodOnWindow('subtractMemberCount');\n  window.addMemberCount = registeMethodOnWindow('addMemberCount');\n  window.getJoinedWorkingGroupIDList = registeMethodOnWindow('getJoinedWorkingGroupIDList');\n  window.getJoinedWorkingGroupList = registeMethodOnWindow('getJoinedWorkingGroupList');\n  // groupRequest\n  window.insertGroupRequest = registeMethodOnWindow('insertGroupRequest');\n  window.deleteGroupRequest = registeMethodOnWindow('deleteGroupRequest');\n  window.updateGroupRequest = registeMethodOnWindow('updateGroupRequest');\n  window.getSendGroupApplication = registeMethodOnWindow('getSendGroupApplication');\n  window.insertAdminGroupRequest = registeMethodOnWindow('insertAdminGroupRequest');\n  window.deleteAdminGroupRequest = registeMethodOnWindow('deleteAdminGroupRequest');\n  window.updateAdminGroupRequest = registeMethodOnWindow('updateAdminGroupRequest');\n  window.getAdminGroupApplication = registeMethodOnWindow('getAdminGroupApplication');\n  // groupMember\n  window.getGroupMemberInfoByGroupIDUserID = registeMethodOnWindow('getGroupMemberInfoByGroupIDUserID');\n  window.getAllGroupMemberList = registeMethodOnWindow('getAllGroupMemberList');\n  window.getAllGroupMemberUserIDList = registeMethodOnWindow('getAllGroupMemberUserIDList');\n  window.getGroupMemberCount = registeMethodOnWindow('getGroupMemberCount');\n  window.getGroupSomeMemberInfo = registeMethodOnWindow('getGroupSomeMemberInfo');\n  window.getGroupAdminID = registeMethodOnWindow('getGroupAdminID');\n  window.getGroupMemberListByGroupID = registeMethodOnWindow('getGroupMemberListByGroupID');\n  window.getGroupMemberListSplit = registeMethodOnWindow('getGroupMemberListSplit');\n  window.getGroupMemberOwnerAndAdmin = registeMethodOnWindow('getGroupMemberOwnerAndAdmin');\n  window.getGroupMemberOwner = registeMethodOnWindow('getGroupMemberOwner');\n  window.getGroupMemberListSplitByJoinTimeFilter = registeMethodOnWindow('getGroupMemberListSplitByJoinTimeFilter');\n  window.getGroupOwnerAndAdminByGroupID = registeMethodOnWindow('getGroupOwnerAndAdminByGroupID');\n  window.getGroupMemberUIDListByGroupID = registeMethodOnWindow('getGroupMemberUIDListByGroupID');\n  window.insertGroupMember = registeMethodOnWindow('insertGroupMember');\n  window.batchInsertGroupMember = registeMethodOnWindow('batchInsertGroupMember');\n  window.deleteGroupMember = registeMethodOnWindow('deleteGroupMember');\n  window.deleteGroupAllMembers = registeMethodOnWindow('deleteGroupAllMembers');\n  window.updateGroupMember = registeMethodOnWindow('updateGroupMember');\n  window.updateGroupMemberField = registeMethodOnWindow('updateGroupMemberField');\n  window.searchGroupMembersDB = registeMethodOnWindow('searchGroupMembers', 'searchGroupMembersDB');\n  // temp cache chat logs\n  window.batchInsertTempCacheMessageList = registeMethodOnWindow('batchInsertTempCacheMessageList');\n  window.InsertTempCacheMessage = registeMethodOnWindow('InsertTempCacheMessage');\n}\nexport const workerPromise = rpc?.connect(5000);","map":{"version":3,"names":["initBackend","RPCMessageEvent","RPC","DatabaseErrorCode","IMWorker","rpc","worker","initWorker","window","event","currentEndpoint","targetEndpoint","resetWorker","destroy","undefined","terminate","catchErrorHandle","error","code","JSON","stringify","data","errCode","ErrorDBTimeout","errMsg","registeMethodOnWindow","name","realName","console","info","args","response","invoke","timeout","initDatabaseAPI","initDB","close","getMessage","getMultipleMessage","getSendingMessageList","getNormalMsgSeq","updateMessageTimeAndStatus","updateMessage","updateColumnsMessage","insertMessage","batchInsertMessageList","getMessageList","getMessageListNoTime","messageIfExists","isExistsInErrChatLogBySeq","messageIfExistsBySeq","getAbnormalMsgSeq","getAbnormalMsgSeqList","batchInsertExceptionMsg","searchMessageByKeyword","searchMessageByContentType","searchMessageByContentTypeAndKeyword","updateMsgSenderNickname","updateMsgSenderFaceURL","updateMsgSenderFaceURLAndSenderNickname","getMsgSeqByClientMsgID","getMsgSeqListByGroupID","getMsgSeqListByPeerUserID","getMsgSeqListBySelfUserID","deleteAllMessage","getAllUnDeleteMessageSeqList","updateSingleMessageHasRead","updateGroupMessageHasRead","updateMessageStatusBySourceID","getAllConversationListDB","getAllConversationListToSync","getHiddenConversationList","getConversation","getMultipleConversationDB","updateColumnsConversation","updateConversation","updateConversationForSync","decrConversationUnreadCount","batchInsertConversationList","insertConversation","getTotalUnreadMsgCountDB","getConversationByUserID","getConversationListSplitDB","deleteConversation","batchUpdateConversationList","conversationIfExists","resetConversation","resetAllConversation","clearConversation","clearAllConversation","setConversationDraftDB","removeConversationDraft","unPinConversation","incrConversationUnreadCount","setMultipleConversationRecvMsgOpt","getLoginUser","insertLoginUser","updateLoginUserByMap","getJoinedSuperGroupList","getJoinedSuperGroupIDList","getSuperGroupInfoByGroupID","deleteSuperGroup","insertSuperGroup","updateSuperGroup","deleteConversationUnreadMessageList","batchInsertConversationUnreadMessageList","superGroupGetMessage","superGroupGetMultipleMessage","superGroupGetNormalMinSeq","getSuperGroupNormalMsgSeq","superGroupUpdateMessageTimeAndStatus","superGroupUpdateMessage","superGroupInsertMessage","superGroupBatchInsertMessageList","superGroupGetMessageListNoTime","superGroupGetMessageList","superGroupUpdateColumnsMessage","superGroupDeleteAllMessage","superGroupSearchMessageByKeyword","superGroupSearchMessageByContentType","superGroupSearchMessageByContentTypeAndKeyword","superGroupUpdateMessageStatusBySourceID","superGroupGetSendingMessageList","superGroupUpdateGroupMessageHasRead","superGroupGetMsgSeqByClientMsgID","superGroupUpdateMsgSenderFaceURLAndSenderNickname","superGroupSearchAllMessageByContentType","exec","getRowsModified","exportDB","result","getBlackListDB","getBlackListUserID","getBlackInfoByBlockUserID","getBlackInfoList","insertBlack","deleteBlack","updateBlack","insertFriendRequest","deleteFriendRequestBothUserID","updateFriendRequest","getRecvFriendApplication","getSendFriendApplication","getFriendApplicationByBothID","insertFriend","deleteFriendDB","updateFriend","getAllFriendList","searchFriendList","getFriendInfoByFriendUserID","getFriendInfoList","insertGroup","deleteGroup","updateGroup","getJoinedGroupListDB","getGroupInfoByGroupID","getAllGroupInfoByGroupIDOrGroupName","subtractMemberCount","addMemberCount","getJoinedWorkingGroupIDList","getJoinedWorkingGroupList","insertGroupRequest","deleteGroupRequest","updateGroupRequest","getSendGroupApplication","insertAdminGroupRequest","deleteAdminGroupRequest","updateAdminGroupRequest","getAdminGroupApplication","getGroupMemberInfoByGroupIDUserID","getAllGroupMemberList","getAllGroupMemberUserIDList","getGroupMemberCount","getGroupSomeMemberInfo","getGroupAdminID","getGroupMemberListByGroupID","getGroupMemberListSplit","getGroupMemberOwnerAndAdmin","getGroupMemberOwner","getGroupMemberListSplitByJoinTimeFilter","getGroupOwnerAndAdminByGroupID","getGroupMemberUIDListByGroupID","insertGroupMember","batchInsertGroupMember","deleteGroupMember","deleteGroupAllMembers","updateGroupMember","updateGroupMemberField","searchGroupMembersDB","batchInsertTempCacheMessageList","InsertTempCacheMessage","workerPromise","connect"],"sources":["C:/ysx/xm/mark/web/src/utils/lib/api/index.js"],"sourcesContent":["import { initBackend } from 'absurd-sql-optimized/dist/indexeddb-main-thread';\nimport { RPCMessageEvent, RPC } from 'rpc-shooter';\nimport { DatabaseErrorCode } from '../constant';\n// @ts-ignore\n//  for vite\n// import IMWorker from './worker?worker';\n//  @ts-ignore\n//  for webpack4\n import IMWorker from 'worker-loader!./worker.js';\nlet rpc;\nlet worker;\nfunction initWorker() {\n    if (typeof window === 'undefined') {\n        return;\n    }\n    // for webpack4 or vite\n     worker = new IMWorker();\n    // for webpack5\n  //  worker = new Worker(new URL('./worker.js', import.meta.url));\n    // This is only required because Safari doesn't support nested\n    // workers. This installs a handler that will proxy creating web\n    // workers through the main thread\n    initBackend(worker);\n    rpc = new RPC({\n        event: new RPCMessageEvent({\n            currentEndpoint: worker,\n            targetEndpoint: worker,\n        }),\n    });\n}\nfunction resetWorker() {\n    if (rpc) {\n        rpc.destroy();\n        rpc = undefined;\n    }\n    if (worker) {\n        worker.terminate();\n        worker = undefined;\n    }\n}\ninitWorker();\nfunction catchErrorHandle(error) {\n    // defined in rpc-shooter\n    if (error.code === -32300) {\n        resetWorker();\n        return JSON.stringify({\n            data: '',\n            errCode: DatabaseErrorCode.ErrorDBTimeout,\n            errMsg: 'database maybe damaged',\n        });\n    }\n    throw error;\n}\nfunction registeMethodOnWindow(name, realName) {\n    console.info(`=> (database api) registe ${realName ?? name}`);\n    return async (...args) => {\n        if (!rpc || !worker) {\n            initWorker();\n        }\n        if (!rpc) {\n            return;\n        }\n        try {\n            // console.info(\n            //   `=> (invoked by go wasm) run ${\n            //     realName ?? name\n            //   } method with args ${JSON.stringify(args)}`\n            // );\n            const response = await rpc.invoke(name, ...args, { timeout: 5000000 });\n            // console.info(\n            //   `=> (invoked by go wasm) run ${realName ?? name} method with response `,\n            //   JSON.stringify(response)\n            // );\n            return JSON.stringify(response);\n        }\n        catch (error) {\n            // defined in rpc-shooter\n            catchErrorHandle(error);\n        }\n    };\n}\n// register method on window for go wasm invoke\nexport function initDatabaseAPI() {\n    if (!rpc) {\n        return;\n    }\n    window.initDB = registeMethodOnWindow('initDB');\n    window.close = registeMethodOnWindow('close');\n    // message\n    window.getMessage = registeMethodOnWindow('getMessage');\n    window.getMultipleMessage = registeMethodOnWindow('getMultipleMessage');\n    window.getSendingMessageList = registeMethodOnWindow('getSendingMessageList');\n    window.getNormalMsgSeq = registeMethodOnWindow('getNormalMsgSeq');\n    window.updateMessageTimeAndStatus = registeMethodOnWindow('updateMessageTimeAndStatus');\n    window.updateMessage = registeMethodOnWindow('updateMessage');\n    window.updateColumnsMessage = registeMethodOnWindow('updateColumnsMessage');\n    window.insertMessage = registeMethodOnWindow('insertMessage');\n    window.batchInsertMessageList = registeMethodOnWindow('batchInsertMessageList');\n    window.getMessageList = registeMethodOnWindow('getMessageList');\n    window.getMessageListNoTime = registeMethodOnWindow('getMessageListNoTime');\n    window.messageIfExists = registeMethodOnWindow('messageIfExists');\n    window.isExistsInErrChatLogBySeq = registeMethodOnWindow('isExistsInErrChatLogBySeq');\n    window.messageIfExistsBySeq = registeMethodOnWindow('messageIfExistsBySeq');\n    window.getAbnormalMsgSeq = registeMethodOnWindow('getAbnormalMsgSeq');\n    window.getAbnormalMsgSeqList = registeMethodOnWindow('getAbnormalMsgSeqList');\n    window.batchInsertExceptionMsg = registeMethodOnWindow('batchInsertExceptionMsg');\n    window.searchMessageByKeyword = registeMethodOnWindow('searchMessageByKeyword');\n    window.searchMessageByContentType = registeMethodOnWindow('searchMessageByContentType');\n    window.searchMessageByContentTypeAndKeyword = registeMethodOnWindow('searchMessageByContentTypeAndKeyword');\n    window.updateMsgSenderNickname = registeMethodOnWindow('updateMsgSenderNickname');\n    window.updateMsgSenderFaceURL = registeMethodOnWindow('updateMsgSenderFaceURL');\n    window.updateMsgSenderFaceURLAndSenderNickname = registeMethodOnWindow('updateMsgSenderFaceURLAndSenderNickname');\n    window.getMsgSeqByClientMsgID = registeMethodOnWindow('getMsgSeqByClientMsgID');\n    window.getMsgSeqListByGroupID = registeMethodOnWindow('getMsgSeqListByGroupID');\n    window.getMsgSeqListByPeerUserID = registeMethodOnWindow('getMsgSeqListByPeerUserID');\n    window.getMsgSeqListBySelfUserID = registeMethodOnWindow('getMsgSeqListBySelfUserID');\n    window.deleteAllMessage = registeMethodOnWindow('deleteAllMessage');\n    window.getAllUnDeleteMessageSeqList = registeMethodOnWindow('getAllUnDeleteMessageSeqList');\n    window.updateSingleMessageHasRead = registeMethodOnWindow('updateSingleMessageHasRead');\n    window.updateGroupMessageHasRead = registeMethodOnWindow('updateGroupMessageHasRead');\n    window.updateMessageStatusBySourceID = registeMethodOnWindow('updateMessageStatusBySourceID');\n    // conversation\n    window.getAllConversationListDB = registeMethodOnWindow('getAllConversationList');\n    window.getAllConversationListToSync = registeMethodOnWindow('getAllConversationListToSync');\n    window.getHiddenConversationList = registeMethodOnWindow('getHiddenConversationList');\n    window.getConversation = registeMethodOnWindow('getConversation');\n    window.getMultipleConversationDB = registeMethodOnWindow('getMultipleConversation');\n    window.updateColumnsConversation = registeMethodOnWindow('updateColumnsConversation');\n    window.updateConversation = registeMethodOnWindow('updateColumnsConversation', 'updateConversation');\n    window.updateConversationForSync = registeMethodOnWindow('updateColumnsConversation', 'updateConversationForSync');\n    window.decrConversationUnreadCount = registeMethodOnWindow('decrConversationUnreadCount');\n    window.batchInsertConversationList = registeMethodOnWindow('batchInsertConversationList');\n    window.insertConversation = registeMethodOnWindow('insertConversation');\n    window.getTotalUnreadMsgCountDB = registeMethodOnWindow('getTotalUnreadMsgCount');\n    window.getConversationByUserID = registeMethodOnWindow('getConversationByUserID');\n    window.getConversationListSplitDB = registeMethodOnWindow('getConversationListSplit');\n    window.deleteConversation = registeMethodOnWindow('deleteConversation');\n    window.batchUpdateConversationList = registeMethodOnWindow('batchUpdateConversationList');\n    window.conversationIfExists = registeMethodOnWindow('conversationIfExists');\n    window.resetConversation = registeMethodOnWindow('resetConversation');\n    window.resetAllConversation = registeMethodOnWindow('resetAllConversation');\n    window.clearConversation = registeMethodOnWindow('clearConversation');\n    window.clearAllConversation = registeMethodOnWindow('clearAllConversation');\n    window.setConversationDraftDB = registeMethodOnWindow('setConversationDraft');\n    window.removeConversationDraft = registeMethodOnWindow('removeConversationDraft');\n    window.unPinConversation = registeMethodOnWindow('unPinConversation');\n    // window.updateAllConversation = registeMethodOnWindow('updateAllConversation');\n    window.incrConversationUnreadCount = registeMethodOnWindow('incrConversationUnreadCount');\n    window.setMultipleConversationRecvMsgOpt = registeMethodOnWindow('setMultipleConversationRecvMsgOpt');\n    // users\n    window.getLoginUser = registeMethodOnWindow('getLoginUser');\n    window.insertLoginUser = registeMethodOnWindow('insertLoginUser');\n    window.updateLoginUserByMap = registeMethodOnWindow('updateLoginUserByMap');\n    // super groups\n    window.getJoinedSuperGroupList = registeMethodOnWindow('getJoinedSuperGroupList');\n    window.getJoinedSuperGroupIDList = registeMethodOnWindow('getJoinedSuperGroupIDList');\n    window.getSuperGroupInfoByGroupID = registeMethodOnWindow('getSuperGroupInfoByGroupID');\n    window.deleteSuperGroup = registeMethodOnWindow('deleteSuperGroup');\n    window.insertSuperGroup = registeMethodOnWindow('insertSuperGroup');\n    window.updateSuperGroup = registeMethodOnWindow('updateSuperGroup');\n    // unread messages\n    window.deleteConversationUnreadMessageList = registeMethodOnWindow('deleteConversationUnreadMessageList');\n    window.batchInsertConversationUnreadMessageList = registeMethodOnWindow('batchInsertConversationUnreadMessageList');\n    // super group messages\n    window.superGroupGetMessage = registeMethodOnWindow('superGroupGetMessage');\n    window.superGroupGetMultipleMessage = registeMethodOnWindow('superGroupGetMultipleMessage');\n    window.superGroupGetNormalMinSeq = registeMethodOnWindow('superGroupGetNormalMinSeq');\n    window.getSuperGroupNormalMsgSeq = registeMethodOnWindow('getSuperGroupNormalMsgSeq');\n    window.superGroupUpdateMessageTimeAndStatus = registeMethodOnWindow('superGroupUpdateMessageTimeAndStatus');\n    window.superGroupUpdateMessage = registeMethodOnWindow('superGroupUpdateMessage');\n    window.superGroupInsertMessage = registeMethodOnWindow('superGroupInsertMessage');\n    window.superGroupBatchInsertMessageList = registeMethodOnWindow('superGroupBatchInsertMessageList');\n    window.superGroupGetMessageListNoTime = registeMethodOnWindow('superGroupGetMessageListNoTime');\n    window.superGroupGetMessageList = registeMethodOnWindow('superGroupGetMessageList');\n    window.superGroupUpdateColumnsMessage = registeMethodOnWindow('superGroupUpdateColumnsMessage');\n    window.superGroupDeleteAllMessage = registeMethodOnWindow('superGroupDeleteAllMessage');\n    window.superGroupSearchMessageByKeyword = registeMethodOnWindow('superGroupSearchMessageByKeyword');\n    window.superGroupSearchMessageByContentType = registeMethodOnWindow('superGroupSearchMessageByContentType');\n    window.superGroupSearchMessageByContentTypeAndKeyword = registeMethodOnWindow('superGroupSearchMessageByContentTypeAndKeyword');\n    window.superGroupUpdateMessageStatusBySourceID = registeMethodOnWindow('superGroupUpdateMessageStatusBySourceID');\n    window.superGroupGetSendingMessageList = registeMethodOnWindow('superGroupGetSendingMessageList');\n    window.superGroupUpdateGroupMessageHasRead = registeMethodOnWindow('superGroupUpdateGroupMessageHasRead');\n    window.superGroupGetMsgSeqByClientMsgID = registeMethodOnWindow('superGroupGetMsgSeqByClientMsgID');\n    window.superGroupUpdateMsgSenderFaceURLAndSenderNickname =\n        registeMethodOnWindow('superGroupUpdateMsgSenderFaceURLAndSenderNickname');\n    window.superGroupSearchAllMessageByContentType = registeMethodOnWindow('superGroupSearchAllMessageByContentType');\n    // debug\n    window.exec = registeMethodOnWindow('exec');\n    window.getRowsModified = registeMethodOnWindow('getRowsModified');\n    window.exportDB = async () => {\n        if (!rpc || !worker) {\n            initWorker();\n        }\n        if (!rpc) {\n            return;\n        }\n        try {\n            console.info('=> (invoked by go wasm) run exportDB method ');\n            const result = await rpc.invoke('exportDB', undefined, { timeout: 5000 });\n            console.info('=> (invoked by go wasm) run exportDB method with response ', JSON.stringify(result));\n            return result;\n        }\n        catch (error) {\n            catchErrorHandle(error);\n        }\n    };\n    // black\n    window.getBlackListDB = registeMethodOnWindow('getBlackList');\n    window.getBlackListUserID = registeMethodOnWindow('getBlackListUserID');\n    window.getBlackInfoByBlockUserID = registeMethodOnWindow('getBlackInfoByBlockUserID');\n    window.getBlackInfoList = registeMethodOnWindow('getBlackInfoList');\n    window.insertBlack = registeMethodOnWindow('insertBlack');\n    window.deleteBlack = registeMethodOnWindow('deleteBlack');\n    window.updateBlack = registeMethodOnWindow('updateBlack');\n    // friendRequest\n    window.insertFriendRequest = registeMethodOnWindow('insertFriendRequest');\n    window.deleteFriendRequestBothUserID = registeMethodOnWindow('deleteFriendRequestBothUserID');\n    window.updateFriendRequest = registeMethodOnWindow('updateFriendRequest');\n    window.getRecvFriendApplication = registeMethodOnWindow('getRecvFriendApplication');\n    window.getSendFriendApplication = registeMethodOnWindow('getSendFriendApplication');\n    window.getFriendApplicationByBothID = registeMethodOnWindow('getFriendApplicationByBothID');\n    // friend\n    window.insertFriend = registeMethodOnWindow('insertFriend');\n    window.deleteFriendDB = registeMethodOnWindow('deleteFriend');\n    window.updateFriend = registeMethodOnWindow('updateFriend');\n    window.getAllFriendList = registeMethodOnWindow('getAllFriendList');\n    window.searchFriendList = registeMethodOnWindow('searchFriendList');\n    window.getFriendInfoByFriendUserID = registeMethodOnWindow('getFriendInfoByFriendUserID');\n    window.getFriendInfoList = registeMethodOnWindow('getFriendInfoList');\n    // groups\n    window.insertGroup = registeMethodOnWindow('insertGroup');\n    window.deleteGroup = registeMethodOnWindow('deleteGroup');\n    window.updateGroup = registeMethodOnWindow('updateGroup');\n    window.getJoinedGroupListDB = registeMethodOnWindow('getJoinedGroupList');\n    window.getGroupInfoByGroupID = registeMethodOnWindow('getGroupInfoByGroupID');\n    window.getAllGroupInfoByGroupIDOrGroupName = registeMethodOnWindow('getAllGroupInfoByGroupIDOrGroupName');\n    window.subtractMemberCount = registeMethodOnWindow('subtractMemberCount');\n    window.addMemberCount = registeMethodOnWindow('addMemberCount');\n    window.getJoinedWorkingGroupIDList = registeMethodOnWindow('getJoinedWorkingGroupIDList');\n    window.getJoinedWorkingGroupList = registeMethodOnWindow('getJoinedWorkingGroupList');\n    // groupRequest\n    window.insertGroupRequest = registeMethodOnWindow('insertGroupRequest');\n    window.deleteGroupRequest = registeMethodOnWindow('deleteGroupRequest');\n    window.updateGroupRequest = registeMethodOnWindow('updateGroupRequest');\n    window.getSendGroupApplication = registeMethodOnWindow('getSendGroupApplication');\n    window.insertAdminGroupRequest = registeMethodOnWindow('insertAdminGroupRequest');\n    window.deleteAdminGroupRequest = registeMethodOnWindow('deleteAdminGroupRequest');\n    window.updateAdminGroupRequest = registeMethodOnWindow('updateAdminGroupRequest');\n    window.getAdminGroupApplication = registeMethodOnWindow('getAdminGroupApplication');\n    // groupMember\n    window.getGroupMemberInfoByGroupIDUserID = registeMethodOnWindow('getGroupMemberInfoByGroupIDUserID');\n    window.getAllGroupMemberList = registeMethodOnWindow('getAllGroupMemberList');\n    window.getAllGroupMemberUserIDList = registeMethodOnWindow('getAllGroupMemberUserIDList');\n    window.getGroupMemberCount = registeMethodOnWindow('getGroupMemberCount');\n    window.getGroupSomeMemberInfo = registeMethodOnWindow('getGroupSomeMemberInfo');\n    window.getGroupAdminID = registeMethodOnWindow('getGroupAdminID');\n    window.getGroupMemberListByGroupID = registeMethodOnWindow('getGroupMemberListByGroupID');\n    window.getGroupMemberListSplit = registeMethodOnWindow('getGroupMemberListSplit');\n    window.getGroupMemberOwnerAndAdmin = registeMethodOnWindow('getGroupMemberOwnerAndAdmin');\n    window.getGroupMemberOwner = registeMethodOnWindow('getGroupMemberOwner');\n    window.getGroupMemberListSplitByJoinTimeFilter = registeMethodOnWindow('getGroupMemberListSplitByJoinTimeFilter');\n    window.getGroupOwnerAndAdminByGroupID = registeMethodOnWindow('getGroupOwnerAndAdminByGroupID');\n    window.getGroupMemberUIDListByGroupID = registeMethodOnWindow('getGroupMemberUIDListByGroupID');\n    window.insertGroupMember = registeMethodOnWindow('insertGroupMember');\n    window.batchInsertGroupMember = registeMethodOnWindow('batchInsertGroupMember');\n    window.deleteGroupMember = registeMethodOnWindow('deleteGroupMember');\n    window.deleteGroupAllMembers = registeMethodOnWindow('deleteGroupAllMembers');\n    window.updateGroupMember = registeMethodOnWindow('updateGroupMember');\n    window.updateGroupMemberField = registeMethodOnWindow('updateGroupMemberField');\n    window.searchGroupMembersDB = registeMethodOnWindow('searchGroupMembers', 'searchGroupMembersDB');\n    // temp cache chat logs\n    window.batchInsertTempCacheMessageList = registeMethodOnWindow('batchInsertTempCacheMessageList');\n    window.InsertTempCacheMessage = registeMethodOnWindow('InsertTempCacheMessage');\n}\nexport const workerPromise = rpc?.connect(5000);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}