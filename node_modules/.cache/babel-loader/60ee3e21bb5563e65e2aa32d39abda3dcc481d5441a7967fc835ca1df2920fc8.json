{"ast":null,"code":"import squel from 'squel';\nexport function localConversationUnreadMessages(db) {\n  return db.exec(`\n      create table if not exists 'local_conversation_unread_messages' (\n            'conversation_id' char(128),\n            'client_msg_id' char(64),\n            'send_time' integer,\n            'ex' varchar(1024),\n            primary key (\n                'conversation_id',\n                'client_msg_id'\n            )\n        );\n    `);\n}\nexport function deleteConversationUnreadMessageList(db, conversationID, sendTime) {\n  return db.exec(`\n        delete from local_conversation_unread_messages where conversation_id = '${conversationID}' and send_time <= ${sendTime};\n    `);\n}\nexport function batchInsertConversationUnreadMessageList(db, messageList) {\n  const sql = squel.insert().into('local_conversation_unread_messages').setFieldsRows(messageList).toString();\n  return db.exec(sql);\n}","map":{"version":3,"names":["squel","localConversationUnreadMessages","db","exec","deleteConversationUnreadMessageList","conversationID","sendTime","batchInsertConversationUnreadMessageList","messageList","sql","insert","into","setFieldsRows","toString"],"sources":["C:/ysx/xm/mark/web/node_modules/open-im-sdk-wasm/lib/sqls/localConversationUnreadMessages.js"],"sourcesContent":["import squel from 'squel';\nexport function localConversationUnreadMessages(db) {\n    return db.exec(`\n      create table if not exists 'local_conversation_unread_messages' (\n            'conversation_id' char(128),\n            'client_msg_id' char(64),\n            'send_time' integer,\n            'ex' varchar(1024),\n            primary key (\n                'conversation_id',\n                'client_msg_id'\n            )\n        );\n    `);\n}\nexport function deleteConversationUnreadMessageList(db, conversationID, sendTime) {\n    return db.exec(`\n        delete from local_conversation_unread_messages where conversation_id = '${conversationID}' and send_time <= ${sendTime};\n    `);\n}\nexport function batchInsertConversationUnreadMessageList(db, messageList) {\n    const sql = squel\n        .insert()\n        .into('local_conversation_unread_messages')\n        .setFieldsRows(messageList)\n        .toString();\n    return db.exec(sql);\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,SAASC,+BAA+BA,CAACC,EAAE,EAAE;EAChD,OAAOA,EAAE,CAACC,IAAI,CAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;AACN;AACA,OAAO,SAASC,mCAAmCA,CAACF,EAAE,EAAEG,cAAc,EAAEC,QAAQ,EAAE;EAC9E,OAAOJ,EAAE,CAACC,IAAI,CAAE;AACpB,kFAAkFE,cAAe,sBAAqBC,QAAS;AAC/H,KAAK,CAAC;AACN;AACA,OAAO,SAASC,wCAAwCA,CAACL,EAAE,EAAEM,WAAW,EAAE;EACtE,MAAMC,GAAG,GAAGT,KAAK,CACZU,MAAM,CAAC,CAAC,CACRC,IAAI,CAAC,oCAAoC,CAAC,CAC1CC,aAAa,CAACJ,WAAW,CAAC,CAC1BK,QAAQ,CAAC,CAAC;EACf,OAAOX,EAAE,CAACC,IAAI,CAACM,GAAG,CAAC;AACvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}